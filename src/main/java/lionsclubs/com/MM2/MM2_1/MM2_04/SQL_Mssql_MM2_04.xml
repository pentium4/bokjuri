<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM2.MM2_1.MM2_04">

	<typeAlias alias="MM2_04VO" type="lionsclubs.com.MM2.MM2_1.MM2_04.MM2_04VO"/>
	
	<typeAlias alias="MM2_04HeadVO" type="lionsclubs.com.MM2.MM2_1.MM2_04.MM2_04HeadVO"/>
	
	<sql id="lionsclubs.com.MM2.MM2_1.MM2_04.declare">
		DECLARE @sessionYear NVARCHAR(4)	/* 현회선택 */
		DECLARE @organCode NVARCHAR(6)	/* 조직코드 */
		
		SET @sessionYear = #sessionYear#;
		SET @organCode = REPLACE(#organCode#, '-', '');
	</sql>
	
	<sql id="lionsclubs.com.MM2.MM2_1.MM2_04.queryList">
		SELECT  INFO.IDN_NO AS idnNo
			   ,INFO.MEMBER_NO AS memberNo
			   ,MB.name AS memberName
			   ,INFO.SANCTION_START_DATE AS sanctionStartDate
			   ,INFO.SANCTION_END_DATE	AS sanctionEndDate
			   ,INFO.EDUCATION_CODE AS educationCode
			   ,CD2.CODE_NAME AS educationName
			   ,INFO.KIND_CODE AS kindCode
			   ,CD1.CODE_NAME AS kindName
			   ,INFO.ITEM_CODE AS itemCode
			   ,dbo.FN_LIONS_CODE_NAME(CD2.CODE1, INFO.ITEM_CODE) AS itemName
			   ,APP.ORGAN_CODE AS organCode
			   ,dbo.FN_LIONS_ORGAN_NAME(APP.ORGAN_CODE) AS organName
			   ,[DESC] AS [desc]
			   ,INFO.UPDATE_DATE AS updateDate
			   ,CASE WHEN OUT_MB.MEMBER_NO IS NOT NULL 
				     THEN 'Y' 
					 ELSE 'N' 
					  END AS isOutMember
		   FROM LIONS_SANCTION INFO
		  /* 회원정보 */ 
		  INNER JOIN(
			SELECT  MEMBER_NO 
				   ,ORGAN_CODE
			  FROM(
				SELECT  ROW_NUMBER() OVER (PARTITION BY MCH.MEMBER_NO ORDER BY MCH.END_DATE DESC, MCH.IDN_NO DESC) AS rnum
					   ,MCH.MEMBER_NO
					   ,MCH.ORGAN_CODE
				  FROM LIONS_MEMBER_CLUB_HIST MCH
				 <dynamic prepend="WHERE">
					 <isNotEmpty prepend="AND" property="sessionYear">
						 <![CDATA[
						 (
							   (MCH.START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND MCH.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
							OR (MCH.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND MCH.END_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
							OR (MCH.START_DATE <= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND MCH.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701') /* '20120701' >= START_DATE AND '20120701' <= END_DATE */
							OR (MCH.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630' AND MCH.END_DATE >= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						 )
						 ]]>
					 </isNotEmpty>
				 </dynamic>
			  ) IDN
				WHERE rnum = 1
		 	      AND ORGAN_CODE = @organCode
		   ) APP
		    ON INFO.MEMBER_NO = APP.MEMBER_NO
		 INNER JOIN LIONS_MEMBER_INFO MB
		    ON APP.MEMBER_NO = MB.MEMBER_NO
		  LEFT OUTER JOIN LIONS_CODE CD1
		    ON INFO.KIND_CODE = CD1.CODE
		   AND CD1.GROUP_CODE = '3110'
		  LEFT OUTER JOIN LIONS_CODE CD2
		    ON CD2.GROUP_CODE = CD1.CODE1
		   AND CD2.CODE = INFO.EDUCATION_CODE
		  /* 퇴회자 정보 */
		  LEFT OUTER JOIN(
			SELECT  MEMBER_NO 
				   ,END_DATE
				   ,ORGAN_CODE
			  FROM(
				SELECT  ROW_NUMBER() OVER (PARTITION BY APP.MEMBER_NO ORDER BY APP.END_DATE DESC, APP.IDN_NO DESC) AS rnum
					   ,APP.MEMBER_NO
					   ,APP.END_DATE
					   ,APP.ORGAN_CODE
				  FROM LIONS_APPOINTMENT APP
				 WHERE APP.APP_KIND_CODE = '1050'
				 <isNotEmpty prepend="AND" property="sessionYear">
				 <![CDATA[
				 (
					   (APP.START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND APP.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
					OR (APP.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND APP.END_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
					OR (APP.START_DATE <= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND APP.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701') /* '20120701' >= START_DATE AND '20120701' <= END_DATE */
					OR (APP.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630' AND APP.END_DATE >= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
				 )
				 ]]>
				 </isNotEmpty>
			  ) IDN
				WHERE rnum = 1
		 	      AND ORGAN_CODE = @organCode	  
		   ) OUT_MB
			ON INFO.MEMBER_NO = OUT_MB.MEMBER_NO
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="sessionYear">
			<![CDATA[
				    INFO.SANCTION_START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' 
				AND INFO.SANCTION_START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630'
			]]>
			</isNotEmpty>
		</dynamic>
	</sql>
	
	<select id="lionsclubs.com.MM2.MM2_1.MM2_04.List" resultClass="MM2_04VO">
		<include refid="lionsclubs.com.MM2.MM2_1.MM2_04.declare" />
		SELECT * FROM(
			<include refid="lionsclubs.com.MM2.MM2_1.MM2_04.queryList" />
		) R
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="kindCodeCondition">
				R.kindCode = #kindCodeCondition#	
			</isNotEmpty>
			<isEqual prepend="AND" removeFirstPrepend="true" property="s3" compareValue="1">
		 		R.isOutMember = 'N'
	 		</isEqual>
 		</dynamic>
 		
 		<dynamic prepend="ORDER BY">
			<isEqual prepend="," property="s1" compareValue="1">
	 			 R.memberName
	 			,R.sanctionStartDate DESC
	 		</isEqual>
			<isEqual prepend="," property="s4" compareValue="1">
	 			 R.kindCode
	 			,R.sanctionStartDate DESC
	 		</isEqual>
			<isEqual prepend="," property="s5" compareValue="1">
	 			R.sanctionStartDate DESC
	 		</isEqual>
			<isNotEqual property="s1" compareValue="1">
				<isNotEqual property="s4" compareValue="1">
					<isNotEqual prepend="," property="s5" compareValue="1">
	 					 R.memberName
	 					,R.sanctionStartDate DESC
		 			</isNotEqual>
		 		</isNotEqual>
	 		</isNotEqual> 		
 		</dynamic>
 	</select>
</sqlMap>
