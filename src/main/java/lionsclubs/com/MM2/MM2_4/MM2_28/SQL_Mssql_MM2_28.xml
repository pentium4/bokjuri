<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM2.MM2_4.MM2_28">
	<typeAlias alias="MM2_28VO" type="lionsclubs.com.MM2.MM2_4.MM2_28.MM2_28VO"/>
	
	<sql id="lionsclubs.com.MM2.MM2_4.MM2_28.declare">
		<![CDATA[
		DECLARE @SQL NVARCHAR(MAX)
		DECLARE @Prod NVARCHAR(MAX)
		DECLARE @condition NVARCHAR(MAX)
		DECLARE @organCode NVARCHAR(6)
		DECLARE @sessionYear INT
		DECLARE @month NVARCHAR(2)
		DECLARE @classItemCode NVARCHAR(4)
		DECLARE @startDate NVARCHAR(8)
		DECLARE @endDate NVARCHAR(8)
		
		SET @organCode = #organCode#;
		SET @sessionYear = #sessionYear#;
		SET @month = #month#;
		SET @classItemCode = #classItemCode#;
		SET @startDate = CASE WHEN @month = '' 
							  THEN CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' 
							  ELSE 
								  CASE WHEN CAST(@month as INT) < 7 
									   THEN CAST(@sessionYear AS NVARCHAR(4)) + @month + '01' 
									   ELSE CAST(@sessionYear - 1 AS NVARCHAR(4)) + @month + '01' 
									    END   
							   END;
		SET @endDate = CASE WHEN @month = '' 
							THEN CAST(@sessionYear AS NVARCHAR(4)) + '0630' 
							ELSE 
								CASE WHEN CAST(@month as INT) < 7 
									 THEN CAST(@sessionYear AS NVARCHAR(4)) + @month + '31' 
									 ELSE CAST(@sessionYear - 1 AS NVARCHAR(4)) + @month + '31' 
									  END
						     END;
		SET @Prod = '';
		SET @condition = '';
		]]>
	</sql>
	
	<sql id="lionsclubs.com.MM2.MM2_4.MM2_28.headIncomeQuery">
		SELECT * FROM(
			SELECT  DISTINCT CLASS_ITEM_CODE
				   ,DETAIL_ITEM_CODE
			  FROM  LIONS_INCOME_EXPEND
			 WHERE INEX_CODE = '1000'	/* 수입 */
			   AND CLASS_ITEM_CODE != '1000'	/* 수입항목 중 이월항목 제외 */
			   AND ORGAN_CODE = @organCode
			   AND INEX_DATE BETWEEN @startDate AND @endDate
			 
			 UNION ALL
			  
			SELECT  DISTINCT MM.CLASS_ITEM_CODE
				   ,MM.DETAIL_ITEM_CODE
			  FROM  LIONS_MONEY_MASTER MM
			 INNER JOIN LIONS_MONEY_PAYMENT MP
			    ON MM.IDN_NO = MP.IDN_NO
			 WHERE MP.PAYMENT_DEFECT = 'N'	/* 결손금 유무 */
			   AND MM.ORGAN_CODE = @organCode
			   AND MP.PAYMENT_DATE BETWEEN @startDate AND @endDate
			
			 UNION ALL
			 
			SELECT  DISTINCT '1100' AS CLASS_ITEM_CODE
				   ,KIND_CODE AS DETAIL_ITEM_CODE
			  FROM LIONS_DEPOSIT
			 WHERE ORGAN_CODE = @organCode
			   AND END_DATE BETWEEN @startDate AND @endDate
			   AND WITHDRAW_YN = 'Y'
		  ) H
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="classItemCode">
				H.CLASS_ITEM_CODE = @classItemCode
			</isNotEmpty>
		</dynamic>
	</sql>
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectIncomeHead" resultClass="MM2_28VO">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declare"/>
		SELECT  DISTINCT HEAD.CLASS_ITEM_CODE + HEAD.DETAIL_ITEM_CODE plusItemCode
			   ,dbo.FN_LIONS_DETAILCODE_NAME('4100', HEAD.CLASS_ITEM_CODE, HEAD.DETAIL_ITEM_CODE) AS detailItemName
		  FROM(
		  	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headIncomeQuery"/>
		  ) HEAD
	</select>
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectIncome" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declare"/>
		
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT AA.CLASS_ITEM_CODE + AA.DETAIL_ITEM_CODE AS CODE 
			    FROM(
			    	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headIncomeQuery"/>
				) AA
		  ) A
		
		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		<isNotEmpty property="classItemCode">
			SET @condition = 'AND CLASS_ITEM_CODE = ' + @classItemCode + '';
		</isNotEmpty>
				
		<![CDATA[
		SET @SQL = '
			SELECT * FROM(
				SELECT  dbo.FN_LIONS_DETAILCODE_NAME(''4100'', CLASS_ITEM_CODE, DETAIL_ITEM_CODE) AS memberName
					   ,SUM(AMOUNT) AS PAY_SUM
					   ,MIN(CLASS_ITEM_CODE) + MIN(DETAIL_ITEM_CODE) AS plusItemCode
				  FROM  LIONS_INCOME_EXPEND
				 WHERE INEX_CODE = ''1000''	/*수입*/
				   AND CLASS_ITEM_CODE != ''1000''	/*수입항목 중 이월항목 제외*/
				   AND ORGAN_CODE = ''' + @organCode + '''
				   AND INEX_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   ' + @condition + '
				 GROUP BY  ORGAN_CODE
						  ,CLASS_ITEM_CODE
						  ,DETAIL_ITEM_CODE
							
				  UNION ALL
				   
				SELECT  (SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = MM.MEMBER_NO) AS memberName
					   ,SUM(MP.PAYMENT) AS PAY_SUM
					   ,MIN(MM.CLASS_ITEM_CODE) + MIN(MM.DETAIL_ITEM_CODE) AS plusItemCode
				  FROM LIONS_MONEY_MASTER MM
				 INNER JOIN LIONS_MONEY_PAYMENT MP
					ON MM.IDN_NO = MP.IDN_NO
				 WHERE MP.PAYMENT_DEFECT = ''N''	/* 결손금 유무 */
				   AND MM.ORGAN_CODE = ''' + @organCode + '''
				   AND MP.PAYMENT_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   ' + @condition + '
				 GROUP BY  MM.ORGAN_CODE
						  ,MM.CLASS_ITEM_CODE
						  ,MM.DETAIL_ITEM_CODE
						  ,MM.MEMBER_NO
				
				 UNION ALL
					 
				SELECT  dbo.FN_LIONS_DETAILCODE_NAME(''4100'', MIN(EA.CLASS_ITEM_CODE), EA.DETAIL_ITEM_CODE) AS memberName
					   ,SUM(EA.EXPIRE_AMOUNT) AS PAY_SUM
					   ,MIN(EA.CLASS_ITEM_CODE) + EA.DETAIL_ITEM_CODE AS plusItemCode
				  FROM (
				  	SELECT  ORGAN_CODE
				  		   ,EXPIRE_AMOUNT
				  		   ,END_DATE
				  		   ,WITHDRAW_YN
				  		   ,''1100'' AS CLASS_ITEM_CODE
				  		   ,KIND_CODE AS DETAIL_ITEM_CODE
			  		  FROM LIONS_DEPOSIT
				  ) EA
				 WHERE EA.ORGAN_CODE = ''' + @organCode + '''
				   AND EA.END_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   AND EA.WITHDRAW_YN = ''Y''
				   ' + @condition + '
				 GROUP BY  EA.ORGAN_CODE
						  ,EA.DETAIL_ITEM_CODE
			 ) TB1
			 PIVOT (SUM(TB1.PAY_SUM) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL
		]]>
	</select>
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectIncomeSum" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declare"/>
		
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT AA.CLASS_ITEM_CODE + AA.DETAIL_ITEM_CODE AS CODE 
			    FROM(
			    	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headIncomeQuery"/>
				) AA
		  ) A
		
		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		<isNotEmpty property="classItemCode">
			SET @condition = 'AND CLASS_ITEM_CODE = ' + @classItemCode + '';
		</isNotEmpty>
				
		<![CDATA[
		SET @SQL = '
			SELECT * FROM(
				SELECT  SUM(AMOUNT) AS PAY_SUM
					   ,CLASS_ITEM_CODE + DETAIL_ITEM_CODE AS plusItemCode
				  FROM  LIONS_INCOME_EXPEND
				 WHERE INEX_CODE = ''1000''	/*수입*/
				   AND CLASS_ITEM_CODE != ''1000''	/*수입항목 중 이월항목 제외*/
				   AND ORGAN_CODE = ''' + @organCode + '''
				   AND INEX_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   ' + @condition + '
				 GROUP BY CLASS_ITEM_CODE + DETAIL_ITEM_CODE
							
				  UNION ALL
				   
				SELECT  SUM(MP.PAYMENT) AS PAY_SUM
					   ,MM.CLASS_ITEM_CODE + MM.DETAIL_ITEM_CODE AS plusItemCode
				  FROM LIONS_MONEY_MASTER MM
				 INNER JOIN LIONS_MONEY_PAYMENT MP
					ON MM.IDN_NO = MP.IDN_NO
				 WHERE MP.PAYMENT_DEFECT = ''N''	/* 결손금 유무 */
				   AND MM.ORGAN_CODE = ''' + @organCode + '''
				   AND MP.PAYMENT_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   ' + @condition + '
				 GROUP BY MM.CLASS_ITEM_CODE + MM.DETAIL_ITEM_CODE

				 UNION ALL
					 
					 
				SELECT  SUM(EA.EXPIRE_AMOUNT) AS PAY_SUM
					   ,MIN(EA.CLASS_ITEM_CODE) + EA.DETAIL_ITEM_CODE AS plusItemCode
				  FROM (
				  	SELECT  ORGAN_CODE
				  		   ,EXPIRE_AMOUNT
				  		   ,END_DATE
				  		   ,WITHDRAW_YN
				  		   ,''1100'' AS CLASS_ITEM_CODE
				  		   ,KIND_CODE AS DETAIL_ITEM_CODE
			  		  FROM LIONS_DEPOSIT
				  ) EA
				 WHERE EA.ORGAN_CODE = ''' + @organCode + '''
				   AND EA.END_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   AND EA.WITHDRAW_YN = ''Y''
				   ' + @condition + '
				 GROUP BY EA.DETAIL_ITEM_CODE
			 ) TB1
			 PIVOT (SUM(TB1.PAY_SUM) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL
		]]>
	</select>
	
	<sql id="lionsclubs.com.MM2.MM2_4.MM2_28.headDefectQuery">
		SELECT  DISTINCT MM.CLASS_ITEM_CODE
			   ,MM.DETAIL_ITEM_CODE
		  FROM  LIONS_MONEY_MASTER MM
		 INNER JOIN LIONS_MONEY_PAYMENT MP
		    ON MM.IDN_NO = MP.IDN_NO
		 INNER JOIN dbo.LIONS_CODE C
		    ON C.CODE = MM.CLASS_ITEM_CODE 
		   AND C.GROUP_CODE = '4100'
		 WHERE MP.PAYMENT_DEFECT = 'Y'	/* 결손금 유무 */
		   AND MM.ORGAN_CODE = @organCode
		   AND MP.PAYMENT_DATE BETWEEN @startDate AND @endDate
		<isEqual prepend="AND" property="defectGubun" compareValue="1">
			(
					MM.CLASS_ITEM_CODE = '1010' 
				AND MM.DETAIL_ITEM_CODE = '1010'
			) 
	 	</isEqual>
	 	<isEqual prepend="AND" property="defectGubun" compareValue="2">
				MM.ORGAN_CODE = @organCode 
			AND MM.CLASS_ITEM_CODE + '/' + MM.DETAIL_ITEM_CODE != '1010/1010'
			AND C.CODE3 != 'D'								 
	 	</isEqual>
		<isEqual prepend="AND" property="defectGubun" compareValue="3">
			C.CODE3 = 'D'
	 	</isEqual>
	 	<isEmpty prepend="AND" property="defectGubun">
	 		C.CODE3 != 'D'
	 	</isEmpty>
	</sql>
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectDefectHead" resultClass="MM2_28VO">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declare"/>
		SELECT  DISTINCT HEAD.CLASS_ITEM_CODE + HEAD.DETAIL_ITEM_CODE plusItemCode
			   ,dbo.FN_LIONS_DETAILCODE_NAME('4100', HEAD.CLASS_ITEM_CODE, HEAD.DETAIL_ITEM_CODE) AS detailItemName
		  FROM(
		  	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headDefectQuery"/>
		  ) HEAD
	</select>
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectDefect" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declare"/>
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT AA.CLASS_ITEM_CODE + AA.DETAIL_ITEM_CODE AS CODE 
			    FROM(
			    	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headDefectQuery"/>	  
				) AA
		  ) A

		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		<isEqual property="defectGubun" compareValue="1">
			SET @condition = '		
				AND (
						MM.CLASS_ITEM_CODE = ''1010'' 
					AND MM.DETAIL_ITEM_CODE = ''1010''
				)
			' 
	 	</isEqual>
	 	<isEqual property="defectGubun" compareValue="2">
	 		SET @condition = '
				AND MM.ORGAN_CODE = ''' + @organCode + ''' 
				AND MM.CLASS_ITEM_CODE + ''/'' + MM.DETAIL_ITEM_CODE != ''1010/1010''
				AND C.CODE3 != ''D''
			'								 
	 	</isEqual>
		<isEqual property="defectGubun" compareValue="3">
			SET @condition = 'AND C.CODE3 = ''D'''
	 	</isEqual>
	 	<isEmpty property="defectGubun">
	 		SET @condition = 'AND C.CODE3 != ''D'''
	 	</isEmpty>
		
		<![CDATA[
		SET @SQL = '
			SELECT * FROM(
				SELECT  (SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = MM.MEMBER_NO) AS memberName
					   ,SUM(MP.PAYMENT) AS PAY_SUM
					   ,MIN(MM.CLASS_ITEM_CODE) + MIN(MM.DETAIL_ITEM_CODE) AS plusItemCode
				  FROM LIONS_MONEY_MASTER MM
				 INNER JOIN LIONS_MONEY_PAYMENT MP
					ON MM.IDN_NO = MP.IDN_NO
				 INNER JOIN dbo.LIONS_CODE C
				    ON C.CODE = MM.CLASS_ITEM_CODE 
				   AND C.GROUP_CODE = ''4100''
				 WHERE MP.PAYMENT_DEFECT = ''Y''	/* 결손금 유무 */
				   AND MM.ORGAN_CODE = ''' + @organCode + '''
				   AND MP.PAYMENT_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   ' + @condition + '
				 GROUP BY  MM.ORGAN_CODE
						  ,MM.CLASS_ITEM_CODE
						  ,MM.DETAIL_ITEM_CODE
						  ,MM.MEMBER_NO
			 ) TB1
			 PIVOT (SUM(TB1.PAY_SUM) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL
		]]>		
	</select>
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectDefectSum" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declare"/>
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT AA.CLASS_ITEM_CODE + AA.DETAIL_ITEM_CODE AS CODE 
			    FROM(
			    	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headDefectQuery"/>	  
				) AA
		  ) A
		  
		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		<isEqual property="defectGubun" compareValue="1">
			SET @condition = '		
				AND (
						MM.CLASS_ITEM_CODE = ''1010'' 
					AND MM.DETAIL_ITEM_CODE = ''1010''
				)
			' 
	 	</isEqual>
	 	<isEqual property="defectGubun" compareValue="2">
	 		SET @condition = '
				AND MM.ORGAN_CODE = ''' + @organCode + ''' 
				AND MM.CLASS_ITEM_CODE + ''/'' + MM.DETAIL_ITEM_CODE != ''1010/1010''
				AND C.CODE3 != ''D''
			'								 
	 	</isEqual>
		<isEqual property="defectGubun" compareValue="3">
			SET @condition = 'AND C.CODE3 = ''D'''
	 	</isEqual>
	 	<isEmpty property="defectGubun">
	 		SET @condition = 'AND C.CODE3 != ''D'''
	 	</isEmpty>
				
		<![CDATA[
		SET @SQL = '
			SELECT * FROM(
				SELECT  SUM(MP.PAYMENT) AS PAY_SUM
					   ,MM.CLASS_ITEM_CODE + MM.DETAIL_ITEM_CODE AS plusItemCode   
				  FROM LIONS_MONEY_MASTER MM
				 INNER JOIN LIONS_MONEY_PAYMENT MP
					ON MM.IDN_NO = MP.IDN_NO
				 INNER JOIN dbo.LIONS_CODE C
				    ON C.CODE = MM.CLASS_ITEM_CODE 
				   AND C.GROUP_CODE = ''4100''					
				 WHERE MP.PAYMENT_DEFECT = ''Y''	/* 결손금 유무 */
				   AND MM.ORGAN_CODE = ''' + @organCode + '''
				   AND MP.PAYMENT_DATE BETWEEN ''' + @startDate + ''' AND ''' + @endDate + '''
				   ' + @condition + '
				 GROUP BY MM.CLASS_ITEM_CODE + MM.DETAIL_ITEM_CODE
			 ) TB1
			 PIVOT (SUM(TB1.PAY_SUM) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL
		]]>
	</select>
	
	<sql id="lionsclubs.com.MM2.MM2_4.MM2_28.declareDebt">
		<![CDATA[
		DECLARE @SQL NVARCHAR(MAX)
		DECLARE @Prod NVARCHAR(MAX)
		DECLARE @condition NVARCHAR(MAX)
		DECLARE @organCode NVARCHAR(6)
		DECLARE @sessionYear INT
		DECLARE @month NVARCHAR(2)
		DECLARE @startDate NVARCHAR(8)
		DECLARE @endDate NVARCHAR(8)
		
		
		SET @organCode = #organCode#;
		SET @sessionYear = #sessionYear#;
		SET @month = #month#;
		SET @startDate = CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701';
		SET @endDate = CASE WHEN @month = '' 
							THEN CAST(@sessionYear AS NVARCHAR(4)) + '0630' 
							ELSE 
								CASE WHEN CAST(@month as INT) < 7 
									 THEN CAST(@sessionYear AS NVARCHAR(4)) + @month + '31' 
									 ELSE CAST(@sessionYear - 1 AS NVARCHAR(4)) + @month + '31' 
									  END
						     END;
		SET @Prod = '';
		SET @condition = '';
		]]>
	</sql>
	
	<sql id="lionsclubs.com.MM2.MM2_4.MM2_28.headDebtQuery">
		<![CDATA[
		SELECT  DISTINCT MIN(MM.CLASS_ITEM_CODE) AS CLASS_ITEM_CODE
			   ,MIN(MM.DETAIL_ITEM_CODE) AS DETAIL_ITEM_CODE
		  FROM LIONS_MONEY_MASTER MM
		 INNER JOIN LIONS_MEMBER_INFO MB
			ON MM.MEMBER_NO = MB.MEMBER_NO
		 INNER JOIN LIONS_MONEY_IMPOST MI
			ON MM.IDN_NO = MI.IDN_NO
		  LEFT OUTER JOIN LIONS_MONEY_PAYMENT MP
			ON MM.IDN_NO = MP.IDN_NO
		   AND MP.PAYMENT_DATE >= @startDate
		   AND MP.PAYMENT_DATE <= @endDate
		 WHERE MM.ORGAN_CODE = @organCode
		   AND MM.GEN_DATE >= @startDate
		   AND MM.GEN_DATE <= @endDate
		   AND MM.CLASS_ITEM_CODE NOT IN('1030', '1040')	/* 약정금, 지구임원분담금 제외 */
		]]>
			<isEqual prepend="AND" property="debtKind" compareValue="1">
				MM.CLASS_ITEM_CODE = '1010'	/* 회의비 */
		 	</isEqual>
		 	<isEqual prepend="AND" property="debtKind" compareValue="2">
		 		MM.CLASS_ITEM_CODE != '1010'	/* 회의비가 아닌 항목 */
		 	</isEqual>
		 GROUP BY MM.IDN_NO
		HAVING ISNULL(MIN(MI.IMPOST), 0) - ISNULL(SUM(MP.PAYMENT), 0) > 0
		
		 UNION ALL
		 
		<![CDATA[
		SELECT  DISTINCT '9999' AS CLASS_ITEM_CODE
			   ,'9999' AS DETAIL_ITEM_CODE
		  FROM LIONS_MONEY_MASTER MM
		 INNER JOIN LIONS_MEMBER_INFO MB
			ON MM.MEMBER_NO = MB.MEMBER_NO
		 INNER JOIN LIONS_MONEY_IMPOST MI
			ON MM.IDN_NO = MI.IDN_NO
		  LEFT OUTER JOIN LIONS_MONEY_PAYMENT MP
			ON MM.IDN_NO = MP.IDN_NO
		   AND MP.PAYMENT_DATE < @startDate
		 WHERE MM.ORGAN_CODE = @organCode
		   AND MM.GEN_DATE < @startDate
		   AND MM.CLASS_ITEM_CODE NOT IN('1030', '1040')	/* 약정금, 지구임원분담금 제외 */
		]]>
			<isEqual prepend="AND" property="debtKind" compareValue="1">
				MM.CLASS_ITEM_CODE = '1010'	/* 회의비 */
		 	</isEqual>
		 	<isEqual prepend="AND" property="debtKind" compareValue="2">
		 		MM.CLASS_ITEM_CODE != '1010'	/* 회의비가 아닌 항목 */
		 	</isEqual>
		 GROUP BY MM.IDN_NO
		HAVING ISNULL(MIN(MI.IMPOST), 0) - ISNULL(SUM(MP.PAYMENT), 0) > 0	
	</sql>	
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectDebtHead" resultClass="MM2_28VO">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declareDebt"/>
		SELECT  DISTINCT HEAD.CLASS_ITEM_CODE + HEAD.DETAIL_ITEM_CODE plusItemCode
			   ,CASE WHEN HEAD.CLASS_ITEM_CODE + HEAD.DETAIL_ITEM_CODE = '99999999'
			   		 THEN '과년도 미수금'
			   		 ELSE dbo.FN_LIONS_DETAILCODE_NAME('4100', HEAD.CLASS_ITEM_CODE, HEAD.DETAIL_ITEM_CODE) 
			   		  END AS detailItemName
		  FROM(
		  	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headDebtQuery"/>
		  ) HEAD
	</select>
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectDebt" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declareDebt"/>
		
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT AA.CLASS_ITEM_CODE + AA.DETAIL_ITEM_CODE AS CODE 
			    FROM(
			    	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headDebtQuery"/>
				) AA
		  ) A
		
		<isEqual property="debtKind" compareValue="1">
			SET @condition = 'AND MM.CLASS_ITEM_CODE = ''1010'''	/* 회의비 */
	 	</isEqual>
	 	<isEqual property="debtKind" compareValue="2">
	 		SET @condition = 'AND MM.CLASS_ITEM_CODE != ''1010'''	/* 회의비가 아닌 항목 */
	 	</isEqual>
		
		<![CDATA[
		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		SET @SQL = '
			SELECT * FROM(
				SELECT * FROM(
					SELECT  MIN(MB.NAME) AS memberName
						   ,ISNULL(MIN(MI.IMPOST), 0) - ISNULL(SUM(MP.PAYMENT), 0) AS PAY_SUM
						   ,MIN(MM.CLASS_ITEM_CODE) + MIN(MM.DETAIL_ITEM_CODE) AS plusItemCode
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MEMBER_INFO MB
						ON MM.MEMBER_NO = MB.MEMBER_NO
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					  LEFT OUTER JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					   AND MP.PAYMENT_DATE >= ' + @startDate + '
					   AND MP.PAYMENT_DATE <= ' + @endDate + '
					 WHERE MM.ORGAN_CODE = ''' + @organCode + '''
					   AND MM.GEN_DATE >= ' + @startDate + '
					   AND MM.GEN_DATE <= ' + @endDate + '
					   AND MM.CLASS_ITEM_CODE NOT IN(''1030'', ''1040'')	/* 약정금, 지구임원분담금 제외 */
					   ' + @condition + '
					 GROUP BY MM.IDN_NO
					 
					 UNION ALL
					 
					SELECT  MIN(MB.NAME) AS memberName
						   ,ISNULL(MIN(MI.IMPOST), 0) - ISNULL(SUM(MP.PAYMENT), 0) AS PAY_SUM
						   ,''99999999'' AS plusItemCode
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MEMBER_INFO MB
						ON MM.MEMBER_NO = MB.MEMBER_NO
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					  LEFT OUTER JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					   AND MP.PAYMENT_DATE < ' + @startDate + '
					 WHERE MM.ORGAN_CODE = ''' + @organCode + '''
					   AND MM.GEN_DATE < ' + @startDate + '
					   AND MM.CLASS_ITEM_CODE NOT IN(''1030'', ''1040'')	/* 약정금, 지구임원분담금 제외 */
					   ' + @condition + '
					 GROUP BY MM.IDN_NO					 
				) RESULT
				 WHERE RESULT.PAY_SUM > 0
			) TB1
			 PIVOT (SUM(TB1.PAY_SUM) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL
		]]>
	</select>	
	
	<select id="lionsclubs.com.MM2.MM2_4.MM2_28.selectDebtSum" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.declareDebt"/>
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT AA.CLASS_ITEM_CODE + AA.DETAIL_ITEM_CODE AS CODE 
			    FROM(
			    	<include refid="lionsclubs.com.MM2.MM2_4.MM2_28.headDebtQuery"/>	  
				) AA
		  ) A
		  
		<isEqual property="debtKind" compareValue="1">
			SET @condition = 'AND MM.CLASS_ITEM_CODE = ''1010'''	/* 회의비 */
	 	</isEqual>
	 	<isEqual property="debtKind" compareValue="2">
	 		SET @condition = 'AND MM.CLASS_ITEM_CODE != ''1010'''	/* 회의비가 아닌 항목 */
	 	</isEqual>		  
		  
		<![CDATA[
		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		SET @SQL = '
			SELECT * FROM(
				SELECT * FROM(
					SELECT  ISNULL(SUM(R.IMPOST), 0) - ISNULL(SUM(R.PAYMENT), 0) AS PAY_SUM
						   ,R.CLASS_ITEM_CODE + R.DETAIL_ITEM_CODE AS plusItemCode
					  FROM(
							SELECT  CASE WHEN ROW_NUMBER() OVER (PARTITION BY MM.CLASS_ITEM_CODE ,MM.DETAIL_ITEM_CODE, MM.IDN_NO ORDER BY CLASS_ITEM_CODE) = 1
										 THEN MI.IMPOST
										  END AS IMPOST
								   ,MP.PAYMENT
								   ,MM.CLASS_ITEM_CODE 
								   ,MM.DETAIL_ITEM_CODE 
							  FROM LIONS_MONEY_MASTER MM
							 INNER JOIN LIONS_MONEY_IMPOST MI
								ON MM.IDN_NO = MI.IDN_NO
							  LEFT OUTER JOIN LIONS_MONEY_PAYMENT MP
								ON MM.IDN_NO = MP.IDN_NO
							   AND MP.PAYMENT_DATE >= ' + @startDate + '
							   AND MP.PAYMENT_DATE <= ' + @endDate + '
							 WHERE MM.ORGAN_CODE = ''' + @organCode + '''
							   AND MM.GEN_DATE >= ' + @startDate + '
							   AND MM.GEN_DATE <= ' + @endDate + '
							   AND MM.CLASS_ITEM_CODE NOT IN(''1030'', ''1040'')	/* 약정금, 지구임원분담금 제외 */
					   		   ' + @condition + '
							   
							 UNION ALL
							 
							SELECT  CASE WHEN ROW_NUMBER() OVER (PARTITION BY ''99999999'', MM.IDN_NO ORDER BY CLASS_ITEM_CODE) = 1
										 THEN MI.IMPOST
										  END AS IMPOST
								   ,MP.PAYMENT
								   ,''9999'' AS CLASS_ITEM_CODE
								   ,''9999'' AS DETAIL_ITEM_CODE
							  FROM LIONS_MONEY_MASTER MM
							 INNER JOIN LIONS_MONEY_IMPOST MI
								ON MM.IDN_NO = MI.IDN_NO
							  LEFT OUTER JOIN LIONS_MONEY_PAYMENT MP
								ON MM.IDN_NO = MP.IDN_NO
							   AND MP.PAYMENT_DATE < ' + @startDate + '
							 WHERE MM.ORGAN_CODE = ''' + @organCode + '''
							   AND MM.GEN_DATE < ' + @startDate + '
							   AND MM.CLASS_ITEM_CODE NOT IN(''1030'', ''1040'')	/* 약정금, 지구임원분담금 제외 */
					   		   ' + @condition + '
					  ) R
					  GROUP BY R.CLASS_ITEM_CODE + R.DETAIL_ITEM_CODE
				) RESULT
				 WHERE RESULT.PAY_SUM > 0
			) TB1
			 PIVOT (SUM(TB1.PAY_SUM) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL
		]]>
	</select>
</sqlMap>

