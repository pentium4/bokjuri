<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM2.MM2_2.MM2_13">

	<typeAlias alias="MM2_13VO" type="lionsclubs.com.MM2.MM2_2.MM2_13.MM2_13VO"/>
	<typeAlias alias="MM2_13HeadVO" type="lionsclubs.com.MM2.MM2_2.MM2_13.MM2_13HeadVO"/>
	
	<sql id="lionsclubs.com.MM2.MM2_2.MM2_13.selectQuery">
	<![CDATA[
		SELECT  INFO.IDN_NO AS idnNo
			   ,INFO.ORGAN_CODE AS organCode		
			   ,INFO.INEX_CODE AS inexCode							
			   ,INFO.INEX_DATE AS inexDate		
			   ,INFO.CLASS_ITEM_CODE AS classItemCode		
			   ,INFO.DETAIL_ITEM_CODE AS detailItemCode	
			   ,CD.CODE_NAME AS classItemName
			   ,CD2.CODE_NAME AS detailItemName	
			   ,INFO.AMOUNT AS amount								
			   ,INFO.INEX_DESC AS inexDesc				
			   ,INFO.INCOME_INSERT_DATE AS incomeInsertDate	
			   ,INFO.INSERT_DATE AS insertDate			
			   ,INFO.INSERT_NAME AS insertName		
			   ,INFO.UPDATE_DATE AS updateDate		
			   ,INFO.UPDATE_NAME AS updateName		
			   ,CD.CODE1 AS detailGroupCode
			   ,INFO.UNIT AS unit
			   ,INFO.ATAND_AMOUNT AS atandAmount		
	      FROM LIONS_INCOME_EXPEND INFO
 	     INNER JOIN LIONS_CODE CD2 
 	        ON GROUP_CODE IN (SELECT CODE1 FROM LIONS_CODE WHERE GROUP_CODE='8070' AND CODE = '1000') 
 	       AND INFO.DETAIL_ITEM_CODE = CD2.CODE
	     INNER JOIN LIONS_CODE CD 
	        ON CD.GROUP_CODE = '4100' 
	       AND CD.CODE = INFO.CLASS_ITEM_CODE
	     WHERE INFO.INEX_CODE = '1000'
		   AND INFO.ORGAN_CODE = @organCode	
	]]>
		<isNotEmpty prepend="AND" property="idnNo">
			INFO.IDN_NO = @idnNo
		</isNotEmpty>
		<isEmpty property="thisMonth" prepend="AND">
		<![CDATA[
			(
				   (INFO.INEX_DATE >= @startDate AND INFO.INEX_DATE <= @endDate)
				OR (INFO.INEX_DATE >= @startDate AND INFO.INEX_DATE <= @endDate)
				OR (INFO.INEX_DATE <= @startDate AND INFO.INEX_DATE >= @startDate) 
				OR (INFO.INEX_DATE <= @endDate AND INFO.INEX_DATE >= @endDate)
			)
		]]>
		</isEmpty>
		<isNotEmpty property="thisMonth" prepend="AND">
		<![CDATA[
				 INFO.INEX_DATE >=  @thisYearMonth + '01'
			 AND INFO.INEX_DATE <= @thisYearMonth + '31'
		]]>	
		</isNotEmpty>
	</sql>
	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_13.headInfo" resultClass="MM2_13HeadVO">
		 SELECT	 ORGAN_CODE AS organCode 
		 		,KO_NAME AS koName
		 		,EN_NAME AS enName
		   FROM LIONS_ORGAN_CODE
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="organCode">
				ORGAN_CODE = #organCode#
			</isNotEmpty>
			<isEmpty property="organCode">
				<isNotEmpty prepend="AND" property="memberNo">
					ORGAN_CODE = dbo.FN_LIONS_ORGAN_CODE(#memberNo#)
				</isNotEmpty>
			</isEmpty>
		</dynamic>
 	</select>
	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_13.codeInfo" resultClass="MM2_13HeadVO">
		SELECT  CODE1 AS groupCode
			   ,CODE AS code
		  FROM LIONS_CODE 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="groupCode">
				GROUP_CODE=#groupCode#	/*코드그룹*/
			</isNotEmpty> 
			<isNotEmpty prepend="AND" property="codeName">
				CODE_NAME = #codeName#	/*코드명*/
			</isNotEmpty> 
			<isNotEmpty prepend="AND" property="code">
				CODE = #code#	/*코드*/
			</isNotEmpty>
		</dynamic>
 	</select>
	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_13.MM2_13" resultClass="MM2_13VO">
	<![CDATA[
		DECLARE @organCode NVARCHAR(10)
		DECLARE @idnNo INT
		DECLARE @thisYear INT
		DECLARE @thisMonth NVARCHAR(10)
		DECLARE @thisYearMonth NVARCHAR(10)
		DECLARE @startDate NVARCHAR(10)
		DECLARE @endDate NVARCHAR(10)
		
		SET @organCode = #organCode#;
		SET @idnNo = #idnNo#;
		SET @thisYear = #thisYear#;		
		SET @thisMonth = #thisMonth#;
		SET @thisYearMonth = CASE WHEN CAST(@thisMonth as INT) < 7 
								  THEN CAST(@thisYear AS NVARCHAR(4)) + @thisMonth 
								  ELSE CAST(@thisYear - 1 AS NVARCHAR(4)) + @thisMonth 
								   END;
		SET @startDate = CAST(@thisYear - 1 AS NVARCHAR(4)) + '0701';	
		SET @endDate = CAST(@thisYear AS NVARCHAR(4)) + '0630';	
	]]>
		 <include refid="lionsclubs.com.MM2.MM2_2.MM2_13.selectQuery"/>
 	</select>
 	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_13.List" resultClass="MM2_13VO">
	<![CDATA[
		DECLARE @organCode NVARCHAR(10)
		DECLARE @idnNo INT
		DECLARE @thisYear INT
		DECLARE @thisMonth NVARCHAR(10)
		DECLARE @thisYearMonth NVARCHAR(10)
		DECLARE @startDate NVARCHAR(10)
		DECLARE @endDate NVARCHAR(10)
		
		SET @organCode = #organCode#;
		SET @idnNo = #idnNo#;
		SET @thisYear = #thisYear#;		
		SET @thisMonth = #thisMonth#;
		SET @thisYearMonth = CASE WHEN CAST(@thisMonth AS INT) < 7 
								  THEN CAST(@thisYear AS NVARCHAR(4)) + @thisMonth 
								  ELSE CAST(@thisYear - 1 AS NVARCHAR(4)) + @thisMonth 
								   END;
		SET @startDate = CAST(@thisYear - 1 AS NVARCHAR(4)) + '0701';	
		SET @endDate = CAST(@thisYear AS NVARCHAR(4)) + '0630';	
	]]>
		<include refid="lionsclubs.com.MM2.MM2_2.MM2_13.selectQuery"/>

		<isEqual prepend="ORDER BY" removeFirstPrepend="true" property="s1" compareValue="1">
 			inexDate  DESC, CAST(CD.CODE2 as INT), CD2.ORD, incomeInsertDate DESC
 		</isEqual>
		<isEqual prepend="ORDER BY" removeFirstPrepend="true" property="s1" compareValue="2">
	   		CAST(CD.CODE2 as INT), CD2.ORD, inexDate  DESC, incomeInsertDate DESC
 		</isEqual>
		<isEqual prepend="ORDER BY" removeFirstPrepend="true" property="s1" compareValue="3">
 			incomeInsertDate  DESC, CAST(CD.CODE2 as INT), CD2.ORD, inexDate  DESC
 		</isEqual>
 	</select>
	
	<insert id="lionsclubs.com.MM2.MM2_2.MM2_13.otherIncomeInsert">
		INSERT INTO LIONS_INCOME_EXPEND(
			 ORGAN_CODE
			,CA_YM
			,INEX_CODE
			,INEX_DATE
			,CLASS_ITEM_CODE
			,DETAIL_ITEM_CODE
			,AMOUNT
			,INEX_DESC
			,INCOME_INSERT_DATE
			,UNIT
			,ATAND_AMOUNT			
			,INSERT_DATE
			,INSERT_NAME
			,UPDATE_DATE
			,UPDATE_NAME
		) VALUES (
			 #organCode#	/* 조직코드 */
			,SUBSTRING(REPLACE(#inexDate#, '.', ''),1,6)	/* 회기년월 */
			,#inexCode#	/* 8510 그룹 -수입1000/지출1010구분 */
			,REPLACE(#inexDate#, '.', '')	/* 수입/지출일자 */
			,#classItemCode#	/* 분류항목코드 */
			,#detailItemCode#	/* 세부항목코드 */
			,REPLACE(#amount#, ',', '')	/* 금액 */
			,#inexDesc#	/* 수입내용 */
			,CONVERT(NVARCHAR,GETDATE(),112)	/* 입력일자 */
			,#unit#	/* 단위 */
			,REPLACE(#atandAmount#, ',', '')	/* 기준금액 */
			,GETDATE()	/* 생성일자 */
			,#insertName#	/* 생성자 */
			,GETDATE()	/* 수정일자 */
			,#updateName#	/* 수정자 */
		)
		/*
			LIONS_INCOME_EXPEND > INEX_CODE : 8510 그룹 코드의 수입/지출 코드 쓰시면 됩니다
			수입 : 1000, 지출 : 1010 입니다.
 			수정자 
		*/ 
	</insert>
	
	<update id="lionsclubs.com.MM2.MM2_2.MM2_13.otherIncomeUpdate">
		UPDATE LIONS_INCOME_EXPEND 
		   SET  CA_YM = SUBSTRING(REPLACE(#inexDate#, '.', ''),1,6)
			   ,INEX_DATE = REPLACE(#inexDate#, '.', '')	/* 수입일자 */
			   ,CLASS_ITEM_CODE = #classItemCode#	/* 분류항목코드 */
			   ,DETAIL_ITEM_CODE = #detailItemCode#	/* 세부항목코드 */
			   ,AMOUNT = REPLACE(#amount#, ',', '')	/* 금액 */
			   ,UNIT = #unit#	/* 단위 */
			   ,ATAND_AMOUNT = REPLACE(#atandAmount#, ',', '')	/* 기준금액 */
			   ,INEX_DESC = #inexDesc#	/* 수입내용 */
			   ,INCOME_INSERT_DATE = CONVERT(NVARCHAR,GETDATE(),112)	/* 입력일자 */
			   ,UPDATE_DATE = GETDATE()	/* 수정일자 */
			   ,UPDATE_NAME = #updateName#	/* 수정자 */
		 WHERE IDN_NO = #idnNo#
	</update>
	
	<update id="lionsclubs.com.MM2.MM2_2.MM2_13.otherIncomeDelete">
		DELETE FROM LIONS_INCOME_EXPEND 
		 WHERE IDN_NO = #idnNo#
	</update>
		
	<select id="lionsclubs.com.MM2.MM2_2.MM2_13.calculateSearch" resultClass="MM2_13VO">
		 SELECT	 ORGAN_CODE AS organCode
		 		,CA_YM AS caYm
		 		,CONFIRM_DATE AS confirmDate
		 		,CONFIRM_COUNT AS confirmCount
		 		,CONFIRM_YN	AS confirmYn
		   FROM LIONS_CALCULATE
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="organCode">
				ORGAN_CODE = #organCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="inexDate">
				CA_YM = SUBSTRING(REPLACE(#inexDate#, '.', ''), 1, 6)
			</isNotEmpty>
		</dynamic>
 	</select>
 	
	<insert id="lionsclubs.com.MM2.MM2_2.MM2_13.calculateInsert">
		 MERGE LIONS_CALCULATE AS T
		 USING (SELECT #organCode#	, SUBSTRING(REPLACE(#inexDate#, '.', ''), 1, 6)) AS S (ORGAN_CODE, CA_YM)
		    ON T.ORGAN_CODE = S.ORGAN_CODE
		   AND T.CA_YM = S.CA_YM
		  WHEN NOT MATCHED BY TARGET 
		  THEN
				INSERT (
					ORGAN_CODE
				   ,CA_YM
				   ,CONFIRM_DATE
				   ,CONFIRM_COUNT
				   ,CONFIRM_YN
				   ,INSERT_DATE
				   ,INSERT_NAME
				   ,UPDATE_DATE
				   ,UPDATE_NAME
				) VALUES (
					 #organCode#	/* 조직코드 */
					,SUBSTRING(REPLACE(#inexDate#, '.', ''), 1, 6)	/* 회기 */
					,''	/* 정산확정일 */
					,0	/* 정산확정횟수 */
					,'N'	/* 정산확정여부 */
					,GETDATE()	/* 생성일자 */
					,#insertName#	/* 생성자 */
					,GETDATE()	/* 수정일자 */
					,#updateName#	/* 수정자 */
				);
	</insert>
	
	<sql id="lionsclubs.com.MM2.MM2_2.MM2_13.sum">
	<![CDATA[
		DECLARE @organCode NVARCHAR(10)
		DECLARE @idnNo INT
		DECLARE @thisYear INT
		DECLARE @thisMonth NVARCHAR(10)
		DECLARE @thisYearMonth NVARCHAR(10)
		DECLARE @startDate NVARCHAR(10)
		DECLARE @endDate NVARCHAR(10)
		
		SET @organCode = #organCode#;
		SET @idnNo  = #idnNo#;
		SET @thisYear = #thisYear#;		
		SET @thisMonth = #thisMonth#;
		SET @thisYearMonth = CASE WHEN CAST(@thisMonth as INT) < 7 THEN CAST(@thisYear AS NVARCHAR(4))+@thisMonth  ELSE CAST(@thisYear - 1 AS NVARCHAR(4))+@thisMonth  END;
		SET @startDate = CAST(@thisYear - 1 as NVARCHAR(4)) + '0701';	
		SET @endDate   = CAST(@thisYear     as NVARCHAR(4)) + '0630';
			
		SELECT SUM(INFO.AMOUNT) AS amount								
		  FROM LIONS_INCOME_EXPEND INFO
		  LEFT OUTER JOIN LIONS_CODE CD2 
		    ON GROUP_CODE IN (SELECT CODE1 FROM LIONS_CODE WHERE GROUP_CODE='8070' AND CODE = '1000') 
		   AND INFO.DETAIL_ITEM_CODE = CD2.CODE
		  LEFT OUTER JOIN LIONS_CODE CD 
		    ON CD.GROUP_CODE='4100'
		   AND CD.CODE = INFO.CLASS_ITEM_CODE
		 WHERE INFO.INEX_CODE = '1000'
		   AND INFO.ORGAN_CODE = @organCode	
	]]>
		<isNotEmpty prepend="AND" property="organCode">
			INFO.ORGAN_CODE = @organCode
		</isNotEmpty>
		<isEmpty property="thisMonth" prepend="AND">
		<![CDATA[
			(
				   (INFO.INEX_DATE >= @startDate AND INFO.INEX_DATE <= @endDate)
				OR (INFO.INEX_DATE >= @startDate AND INFO.INEX_DATE <= @endDate)
				OR (INFO.INEX_DATE <= @startDate AND INFO.INEX_DATE >= @startDate) 
				OR (INFO.INEX_DATE <= @endDate AND INFO.INEX_DATE >= @endDate)
			)
		]]>
		</isEmpty>
		<isNotEmpty property="thisMonth" prepend="AND">
		<![CDATA[
			(INFO.INEX_DATE BETWEEN @thisYearMonth + '01' AND @thisYearMonth + '31')
		]]>
		</isNotEmpty>
	</sql>
	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_13.paymentSum" resultClass="MM2_13VO">
		<include refid="lionsclubs.com.MM2.MM2_2.MM2_13.sum"/>
	</select>

	<select id="lionsclubs.com.MM2.MM2_2.MM2_13.paymentDate" resultClass="MM2_13VO">
		<![CDATA[
		DECLARE @organCode NVARCHAR(10);
		DECLARE @thisYear INT;
		DECLARE @thisMonth NVARCHAR(10);
		DECLARE @thisYearMonth NVARCHAR(10);
		DECLARE @startYm NVARCHAR(10);
		DECLARE @endYm NVARCHAR(10);
		
		SET @organCode = #organCode#;
		SET @thisYear = #thisYear#;
		SET @thisMonth = #thisMonth#;
		SET @thisYearMonth = CASE WHEN CAST(@thisMonth AS INT) < 7
								  THEN CAST(@thisYear AS NVARCHAR(4)) + @thisMonth 
								  ELSE CAST(@thisYear - 1 AS NVARCHAR(4)) + @thisMonth  
								   END;
		SET @startYm = CAST(@thisYear - 1 AS NVARCHAR(4)) + '07';	
		SET @endYm = CAST(@thisYear AS NVARCHAR(4)) + '06';	
	
		SELECT TOP 1 CONFIRM_DATE AS confirmDate						
		  FROM LIONS_CALCULATE INFO
	     WHERE CONFIRM_YN = 'Y'
	       AND INFO.ORGAN_CODE = @organCode
		]]>
		<isEmpty property="thisMonth" prepend="AND">
		<![CDATA[
			(INFO.CA_YM BETWEEN @startYm AND @endYm)
		]]>
		</isEmpty>
		<isNotEmpty property="thisMonth" prepend="AND">
		<![CDATA[
			INFO.CA_YM = @thisYearMonth
		]]>
		</isNotEmpty>
		 ORDER BY INFO.CA_YM DESC
	</select>
</sqlMap>
