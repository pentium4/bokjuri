<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM2.MM2_2.MM2_34">

	<typeAlias alias="MM2_34VO" type="lionsclubs.com.MM2.MM2_2.MM2_34.MM2_34VO"/>
	
	<sql id="lionsclubs.com.MM2.MM2_2.MM2_34.declare">
		<![CDATA[
		DECLARE @SQL NVARCHAR(MAX);
		DECLARE @Prod NVARCHAR(MAX);
		DECLARE @paymentDefect NVARCHAR(1);
		DECLARE @organCode NVARCHAR(6);
		DECLARE @startDate NVARCHAR(8);
		DECLARE @endDate NVARCHAR(8);
		DECLARE @sessionYear INT;
		DECLARE @month NVARCHAR(2);
		
		SET @organCode = #organCode#;
		SET @sessionYear = #sessionYear#;
		SET @month = #month#;
		SET @startDate = CASE WHEN @month = '' 
							  THEN CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' 
							  ELSE 
								  CASE WHEN CAST(@month as INT) < 7 
									   THEN CAST(@sessionYear AS NVARCHAR(4)) + @month + '01' 
									   ELSE CAST(@sessionYear - 1 AS NVARCHAR(4)) + @month + '01' 
									    END   
							   END;
		SET @endDate = CASE WHEN @month = '' 
							THEN CAST(@sessionYear AS NVARCHAR(4)) + '0630' 
							ELSE 
								CASE WHEN CAST(@month as INT) < 7 
									 THEN CAST(@sessionYear AS NVARCHAR(4)) + @month + '31' 
									 ELSE CAST(@sessionYear - 1 AS NVARCHAR(4)) + @month + '31' 
									  END
						     END;
		SET @Prod = '';		
		]]>
	</sql>
	
	<sql id="lionsclubs.com.MM2.MM2_2.MM2_34.selectQuery">
		<![CDATA[
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT R.CLASS_ITEM_CODE + R.DETAIL_ITEM_CODE AS CODE 
			    FROM(
					SELECT  DISTINCT MIN(MM.CLASS_ITEM_CODE) AS CLASS_ITEM_CODE
						   ,MIN(MM.DETAIL_ITEM_CODE) AS DETAIL_ITEM_CODE
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					  LEFT JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					 WHERE MM.CLASS_ITEM_CODE NOT IN('1030', '1040')
					   AND MM.ORGAN_CODE = @organCode
					   AND MM.GEN_DATE <= @endDate
					 GROUP BY MM.IDN_NO
					HAVING MIN(ISNULL(MI.IMPOST, 0)) - SUM(ISNULL(MP.PAYMENT, 0)) > 0	
				) R
		  ) A
		  
		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		SET @SQL = '
			 SELECT * FROM(
					SELECT  (SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = MIN(MM.MEMBER_NO)) AS memberName
						   ,MIN(ISNULL(MI.IMPOST, 0)) - SUM(ISNULL(MP.PAYMENT, 0)) AS balance
						   ,MIN(MM.CLASS_ITEM_CODE) + MIN(MM.DETAIL_ITEM_CODE) AS plusItemCode 
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					  LEFT JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					 WHERE MM.CLASS_ITEM_CODE NOT IN(''1030'', ''1040'')
					   AND MM.ORGAN_CODE = ''' + @organCode + '''
					   AND MM.GEN_DATE <= ''' + @endDate + ''' 
					 GROUP BY MM.IDN_NO
					HAVING MIN(ISNULL(MI.IMPOST, 0)) - SUM(ISNULL(MP.PAYMENT, 0)) > 0	 
			 ) TB1
			 PIVOT (SUM(TB1.balance) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL
		]]>
	</sql>
	
 	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_34.List" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_2.MM2_34.declare"/>
		<include refid="lionsclubs.com.MM2.MM2_2.MM2_34.selectQuery"/>
 	</select>
 	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_34.headInfo" resultClass="java.util.HashMap">
		<include refid="lionsclubs.com.MM2.MM2_2.MM2_34.declare"/>
		<![CDATA[
		SELECT  DISTINCT MIN(MM.CLASS_ITEM_CODE) + MIN(MM.DETAIL_ITEM_CODE) AS plusItemCode
			   ,dbo.FN_LIONS_DETAILCODE_NAME('4100', MIN(MM.CLASS_ITEM_CODE), MIN(MM.DETAIL_ITEM_CODE)) AS detailItemName
			   ,dbo.FN_LIONS_CODE_ORD('4100', MIN(MM.CLASS_ITEM_CODE)) AS ord
		  FROM LIONS_MONEY_MASTER MM
		 INNER JOIN LIONS_MONEY_IMPOST MI
			ON MM.IDN_NO = MI.IDN_NO
		  LEFT JOIN LIONS_MONEY_PAYMENT MP
			ON MM.IDN_NO = MP.IDN_NO
		 WHERE MM.CLASS_ITEM_CODE NOT IN('1030', '1040')
		   AND MM.ORGAN_CODE = @organCode
		   AND MM.GEN_DATE <= @endDate
		 GROUP BY MM.IDN_NO
		HAVING MIN(ISNULL(MI.IMPOST, 0)) - SUM(ISNULL(MP.PAYMENT, 0)) > 0
		 ORDER BY ord
 		]]>
 	</select>
 	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_34.balanceSum" resultClass="java.util.HashMap" remapResults="true">
		<include refid="lionsclubs.com.MM2.MM2_2.MM2_34.declare"/>
		<![CDATA[
		SELECT @Prod = @Prod + '[' + CODE + '],'
		  FROM (
			  SELECT R.CLASS_ITEM_CODE + R.DETAIL_ITEM_CODE AS CODE 
			    FROM(
					SELECT  DISTINCT MIN(MM.CLASS_ITEM_CODE) AS CLASS_ITEM_CODE
						   ,MIN(MM.DETAIL_ITEM_CODE) AS DETAIL_ITEM_CODE
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					  LEFT JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					 WHERE MM.CLASS_ITEM_CODE NOT IN('1030', '1040')
					   AND MM.ORGAN_CODE = @organCode
					   AND MM.GEN_DATE <= @endDate
					 GROUP BY MM.IDN_NO
					HAVING MIN(ISNULL(MI.IMPOST, 0)) - SUM(ISNULL(MP.PAYMENT, 0)) > 0	
				) R
		  ) A
		  
		SET @Prod = LEFT(@Prod, LEN(@Prod) - 1);
		
		SET @SQL = '
			 SELECT * FROM(
					SELECT  MIN(ISNULL(MI.IMPOST, 0)) - SUM(ISNULL(MP.PAYMENT, 0)) AS balance
						   ,MIN(MM.CLASS_ITEM_CODE) + MIN(MM.DETAIL_ITEM_CODE) AS plusItemCode 
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					  LEFT JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					 WHERE MM.CLASS_ITEM_CODE NOT IN(''1030'', ''1040'')
					   AND MM.ORGAN_CODE = ''' + @organCode + '''
					   AND MM.GEN_DATE <= ''' + @endDate + ''' 
					 GROUP BY MM.IDN_NO
					HAVING MIN(ISNULL(MI.IMPOST, 0)) - SUM(ISNULL(MP.PAYMENT, 0)) > 0	 
			 ) TB1
			 PIVOT (SUM(TB1.balance) FOR TB1.plusItemCode IN(' + @Prod + ')) AS PVT
		'
		EXEC SP_EXECUTESQL @SQL		
		]]>
	</select>
</sqlMap>
