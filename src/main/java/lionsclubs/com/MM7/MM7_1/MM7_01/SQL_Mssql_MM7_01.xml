<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM7.MM7_1.MM7_01">
	<typeAlias alias="MM7_01VO" type="lionsclubs.com.MM7.MM7_1.MM7_01.MM7_01VO" />
	
	<sql id="lionsclubs.com.MM7.MM7_1.MM7_01.declare">
		DECLARE @idnNo INT /* 번호 */
		DECLARE @sessionYear NVARCHAR(4)	/* 회기년도 */
		DECLARE @organCode NVARCHAR(6)	/* 조직코드 */
		DECLARE @clubCode NVARCHAR(6)	/* 클럽코드 */
		DECLARE @memberNo NVARCHAR(8)	/* 회원번호 */

		SET @idnNo = #idnNo#;
		SET @sessionYear = #sessionYear#;
		SET @organCode = #organCode#;
		SET @clubCode = #clubCode#;
		SET @memberNo = #memberNo#;
	</sql>

	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listReception" resultClass="MM7_01VO">
		<include refid="lionsclubs.com.MM7.MM7_1.MM7_01.declare" />
		
		/* 문서읽기권한 직책 리스트 */
		WITH DOC_WRITE_TITLE_CODE AS(
			SELECT  C1.CODE AS APP_KIND_CODE
				   ,C2.CODE	AS APP_DESC_CODE
			  FROM LIONS_CODE C1
			 INNER JOIN LIONS_CODE C2
				ON C1.CODE1 = C2.GROUP_CODE
			 WHERE C1.GROUP_CODE = '2700'
			   AND C2.CODE3 LIKE '%R%'
		), DOC_READ_ORGAN_CODE AS(
			SELECT R.organCode
			  FROM(
				SELECT CODE_NAME AS organCode
				  FROM LIONS_CODE
				 WHERE GROUP_CODE = (SELECT CODE1 FROM LIONS_CODE WHERE GROUP_CODE = '9520' AND CODE_NAME = @memberNo)		  
			  	
			  	 UNION
			  	 			  
				SELECT organCode
				  FROM(
					SELECT  @clubCode AS organCode
						   ,1000 AS APP_KIND_CODE
						   ,9000 AS APP_DESC_CODE
				) A
				 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
					ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
				   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
				
				UNION
						
				SELECT  A.APP_SECTOR_CODE AS organCode
				  FROM LIONS_APPOINTMENT A
				 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
					ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
				   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
				 WHERE A.MEMBER_NO = @memberNo
				 <![CDATA[
				   AND (
						   (A.START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						OR (A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						OR (A.START_DATE <= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701') /* '20120701' >= START_DATE AND '20120701' <= END_DATE */
						OR (A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630' AND A.END_DATE >= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
					)
			 	]]>
			  ) R
		)
		
		SELECT  (PAGING.totalRecordCount + 1) - PAGING.rnum AS rnum
			   ,PAGING.totalRecordCount
			   ,PAGING.idnNo
			   ,PAGING.docNo
			   ,PAGING.docTitle
			   ,PAGING.outgoingOrganCode
			   ,PAGING.outgoingOrganName
			   ,PAGING.receive
			   ,PAGING.readYn
			   ,PAGING.updateDate
		  FROM(
			SELECT  ROW_NUMBER() OVER(ORDER BY idnNo DESC) AS rnum
				   ,COUNT(1) OVER() AS totalRecordCount
				   ,PAGING_WARP.*
			  FROM(			
				SELECT  D.IDN_NO AS idnNo
					   ,MIN(D.DOC_NO) AS docNo	/* 문서번호 */
					   ,MIN(D.DOC_TITLE) AS docTitle	/* 문서제목 */
					   ,MIN(D.OUTGOING_ORGAN_CODE) AS outgoingOrganCode	/* 보낸조직코드 */
			   		   ,dbo.FN_LIONS_ORGAN_NAME(MIN(D.OUTGOING_ORGAN_CODE)) AS outgoingOrganName	/* 보낸조직명 */
					   ,STUFF((
							 SELECT ',' + SUBSTRING(DR.RECEIVE_ORGAN_CODE, 1, 3) + '-' + SUBSTRING(DR.RECEIVE_ORGAN_CODE, 4, 3) + ' ' + dbo.FN_LIONS_ORGAN_NAME(DR.RECEIVE_ORGAN_CODE)
							   FROM LIONS_DOC_RECEIVE DR
							  WHERE DR.IDN_NO = D.IDN_NO
								FOR XML PATH('')
						), 1, 1, '') AS receive	/* 수신(받는)조직코드 */
					   ,CASE WHEN (SELECT COUNT(*) FROM LIONS_DOC_SEARCH_MEMBER WHERE IDN_NO = D.IDN_NO AND SEARCH_MEMBER_NO = @memberNo) > 0
					   		 THEN 'Y'
					   		 ELSE 'N'
					   		  END AS readYn 					   
					   ,(SELECT MIN(SEARCH_DATE) FROM LIONS_DOC_SEARCH_MEMBER WHERE IDN_NO = D.IDN_NO) AS updateDate	/* 수신일시 */
				  FROM LIONS_DOC D
				 INNER JOIN LIONS_DOC_RECEIVE DR
					ON D.IDN_NO = DR.IDN_NO
					<isNotEmpty prepend="AND" property="receiveOrganCode">
						DR.RECEIVE_ORGAN_CODE = #receiveOrganCode#
					</isNotEmpty>
				 INNER JOIN DOC_READ_ORGAN_CODE DROC
				    ON DR.RECEIVE_ORGAN_CODE = DROC.organCode
				 WHERE D.DOC_CREATE_KIND = 'N'
				<isNotEmpty prepend="AND" property="outgoingOrganCode">
					D.OUTGOING_ORGAN_CODE = #outgoingOrganCode#
				</isNotEmpty>
				 GROUP BY D.IDN_NO
			) PAGING_WARP
			<dynamic prepend="WHERE">
				<isNotEmpty prepend="AND" property="readYn">
					PAGING_WARP.readYn = #readYn#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="docTitle">
					PAGING_WARP.docTitle LIKE '%' + #docTitle# + '%'
				</isNotEmpty>
			</dynamic>
		) PAGING
		 WHERE RNUM BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
	</select>
	
	
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.unreadReceptionCount" resultClass="Integer">
		<include refid="lionsclubs.com.MM7.MM7_1.MM7_01.declare" />
		
		/* 문서읽기권한 직책 리스트 */
		WITH DOC_WRITE_TITLE_CODE AS(
			SELECT  C1.CODE AS APP_KIND_CODE
				   ,C2.CODE	AS APP_DESC_CODE
			  FROM LIONS_CODE C1
			 INNER JOIN LIONS_CODE C2
				ON C1.CODE1 = C2.GROUP_CODE
			 WHERE C1.GROUP_CODE = '2700'
			   AND C2.CODE3 LIKE '%R%'
		), DOC_READ_ORGAN_CODE AS(
			SELECT R.organCode
			  FROM(
				SELECT CODE_NAME AS organCode
				  FROM LIONS_CODE
				 WHERE GROUP_CODE = (SELECT CODE1 FROM LIONS_CODE WHERE GROUP_CODE = '9520' AND CODE_NAME = @memberNo)		  
			  	
			  	 UNION
			  	 			  
				SELECT organCode
				  FROM(
					SELECT  @clubCode AS organCode
						   ,1000 AS APP_KIND_CODE
						   ,9000 AS APP_DESC_CODE
				) A
				 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
					ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
				   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
				
				UNION
						
				SELECT  A.APP_SECTOR_CODE AS organCode
				  FROM LIONS_APPOINTMENT A
				 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
					ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
				   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
				 WHERE A.MEMBER_NO = @memberNo
				 <![CDATA[
				   AND (
						   (A.START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						OR (A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						OR (A.START_DATE <= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701') /* '20120701' >= START_DATE AND '20120701' <= END_DATE */
						OR (A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630' AND A.END_DATE >= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
					)
			 	]]>
			  ) R
		)
		
		SELECT COUNT(DISTINCT D.IDN_NO) AS count
		  FROM LIONS_DOC D
		 INNER JOIN LIONS_DOC_RECEIVE DR
			ON D.IDN_NO = DR.IDN_NO
		 INNER JOIN DOC_READ_ORGAN_CODE DROC
		    ON DR.RECEIVE_ORGAN_CODE = DROC.organCode
		 WHERE D.DOC_CREATE_KIND = 'N'
		   AND (SELECT COUNT(*) FROM LIONS_DOC_SEARCH_MEMBER WHERE IDN_NO = D.IDN_NO AND SEARCH_MEMBER_NO = @memberNo) = 0
	</select>	
	
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listOutgoing" resultClass="MM7_01VO">
		<include refid="lionsclubs.com.MM7.MM7_1.MM7_01.declare" />
		
		/* 문서쓰기권한 직책 리스트 */
		WITH DOC_WRITE_TITLE_CODE AS(
			SELECT  C1.CODE AS APP_KIND_CODE
				   ,C2.CODE	AS APP_DESC_CODE
			  FROM LIONS_CODE C1
			 INNER JOIN LIONS_CODE C2
				ON C1.CODE1 = C2.GROUP_CODE
			 WHERE C1.GROUP_CODE = '2700'
			   AND C2.CODE3 LIKE '%R%'
		), DOC_WRITE_ORGAN_CODE AS(
			SELECT R.organCode
			  FROM(
				SELECT CODE_NAME AS organCode
				  FROM LIONS_CODE
				 WHERE GROUP_CODE = (SELECT CODE1 FROM LIONS_CODE WHERE GROUP_CODE = '9520' AND CODE_NAME = @memberNo)		  
			  	
			  	 UNION			  
			  
				SELECT organCode
				  FROM(
					SELECT  @clubCode AS organCode
						   ,1000 AS APP_KIND_CODE
						   ,9000 AS APP_DESC_CODE
				) A
				 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
					ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
				   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
				
				UNION
						
				SELECT  A.APP_SECTOR_CODE AS organCode
				  FROM LIONS_APPOINTMENT A
				 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
					ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
				   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
				 WHERE A.MEMBER_NO = @memberNo
				 <![CDATA[
				   AND (
						   (A.START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						OR (A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						OR (A.START_DATE <= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701') /* '20120701' >= START_DATE AND '20120701' <= END_DATE */
						OR (A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630' AND A.END_DATE >= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
					)
			 	]]>
			  ) R
		)
		
		SELECT  (PAGING.totalRecordCount + 1) - PAGING.rnum AS rnum
			   ,PAGING.totalRecordCount
			   ,PAGING.idnNo
			   ,PAGING.docNo
			   ,PAGING.docTitle
			   ,PAGING.outgoingOrganCode
			   ,PAGING.outgoingOrganName
			   ,PAGING.receive
			   ,PAGING.updateDate
		  FROM(
			SELECT  ROW_NUMBER() OVER(ORDER BY idnNo DESC) AS rnum
				   ,COUNT(1)  OVER() AS totalRecordCount
				   ,PAGING_WARP.*
			  FROM(		
				SELECT  D.IDN_NO AS idnNo
					   ,MIN(D.DOC_NO) AS docNo	/* 문서번호 */
					   ,MIN(D.DOC_TITLE) AS docTitle	/* 문서제목 */
					   ,MIN(D.OUTGOING_ORGAN_CODE) AS outgoingOrganCode	/* 보낸조직코드 */
			   		   ,dbo.FN_LIONS_ORGAN_NAME(MIN(D.OUTGOING_ORGAN_CODE)) AS outgoingOrganName	/* 보낸조직명 */
					   ,STUFF((
							 SELECT ',' + SUBSTRING(DR.RECEIVE_ORGAN_CODE, 1, 3) + '-' + SUBSTRING(DR.RECEIVE_ORGAN_CODE, 4, 3) + ' ' + dbo.FN_LIONS_ORGAN_NAME(DR.RECEIVE_ORGAN_CODE)
							   FROM LIONS_DOC_RECEIVE DR
							  WHERE DR.IDN_NO = D.IDN_NO
								FOR XML PATH('')
						), 1, 1, '') AS receive	/* 수신(받는)조직코드 */
					   ,MIN(D.UPDATE_DATE) AS updateDate	/* 보낸일시 */
				  FROM LIONS_DOC D
				 INNER JOIN LIONS_DOC_RECEIVE DR
					ON D.IDN_NO = DR.IDN_NO
					<isNotEmpty prepend="AND" property="receiveOrganCode">
						DR.RECEIVE_ORGAN_CODE = #receiveOrganCode#
					</isNotEmpty>					
				 INNER JOIN DOC_WRITE_ORGAN_CODE DWOC
				    ON D.OUTGOING_ORGAN_CODE = DWOC.organCode				  
				 WHERE D.DOC_CREATE_KIND = 'N'
					<isNotEmpty prepend="AND" property="outgoingOrganCode">
						D.OUTGOING_ORGAN_CODE = #outgoingOrganCode#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="docTitle">
						D.DOC_TITLE LIKE '%' + #docTitle# + '%'
					</isNotEmpty>
				 GROUP BY D.IDN_NO
			) PAGING_WARP
		) PAGING
		 WHERE RNUM BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
	</select>
		
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listDuring" resultClass="MM7_01VO">
		<include refid="lionsclubs.com.MM7.MM7_1.MM7_01.declare" />
		SELECT  (PAGING.totalRecordCount + 1) - PAGING.rnum AS rnum
			   ,PAGING.totalRecordCount
			   ,PAGING.idnNo
			   ,PAGING.docNo
			   ,PAGING.docTitle
			   ,PAGING.receive
			   ,PAGING.updateDate
		  FROM(
			SELECT  ROW_NUMBER() OVER(ORDER BY idnNo DESC) AS rnum
				   ,COUNT(1)  OVER() AS totalRecordCount
				   ,PAGING_WARP.*
			  FROM(
				SELECT  D.IDN_NO AS idnNo
					   ,D.DOC_NO AS docNo	/* 문서번호 */
					   ,D.DOC_TITLE AS docTitle	/* 문서제목 */
					   ,STUFF((
							 SELECT ',' + SUBSTRING(DR.RECEIVE_ORGAN_CODE, 1, 3) + '-' + SUBSTRING(DR.RECEIVE_ORGAN_CODE, 4, 3) + ' ' + dbo.FN_LIONS_ORGAN_NAME(DR.RECEIVE_ORGAN_CODE)
							   FROM LIONS_DOC_RECEIVE DR
							  WHERE DR.IDN_NO = D.IDN_NO
								FOR XML PATH('')
						), 1, 1, '') AS receive	/* 수신(받는)조직코드 */
					   ,D.UPDATE_DATE AS updateDate	/* 저장일시 */
				  FROM LIONS_DOC D
				 WHERE D.INSERT_NAME = @memberNo
				   AND D.DOC_CREATE_KIND = 'Y'
					<isNotEmpty prepend="AND" property="docTitle">
						D.DOC_TITLE LIKE '%' + #docTitle# + '%'
					</isNotEmpty>				   
			) PAGING_WARP
		) PAGING
		 WHERE RNUM BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
	</select>
	
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.objectDoc" resultClass="MM7_01VO">
		<include refid="lionsclubs.com.MM7.MM7_1.MM7_01.declare" />
		
		<![CDATA[
		SELECT  D.IDN_NO AS idnNo
			   ,D.STORAGE_DATE AS storageDate
			   ,D.DOC_NO AS docNo
			   ,D.DOC_TITLE AS docTitle
			   ,REPLACE(CAST(D.DOC_CONTENT AS NVARCHAR(MAX)), '<!--[if !supportEmptyParas]-->&nbsp;<!--[endif]-->', '') AS docContent
			   ,D.DOC_CREATE_KIND AS docCreateKind
			   ,D.FILE_ID AS fileId
			   ,(SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = D.INSERT_NAME) AS name	/* 보낸사람 */
			   ,(SELECT MOBILE FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = D.INSERT_NAME) AS mobile	/* 전화번호 */
			   ,D.OUTGOING_ORGAN_CODE AS outgoingOrganCode	/* 보낸조직코드 */
			   ,dbo.FN_LIONS_ORGAN_NAME(D.OUTGOING_ORGAN_CODE) AS outgoingOrganName	/* 보낸조직명 */
			   ,D.INSERT_DATE AS outgoingDate	/* 발신일 */
			   ,(SELECT MIN(SEARCH_DATE) FROM LIONS_DOC_SEARCH_MEMBER WHERE IDN_NO = D.IDN_NO AND SEARCH_MEMBER_NO = @memberNo) AS receiveDate	/* 수신일 */
			   ,DATEDIFF(Day, UPDATE_DATE, GETDATE()) AS docCreateDay	/* 문서를 발신한 일자로부터 일수 */
			   ,D.INSERT_NAME AS insertName
		  FROM LIONS_DOC D
		 WHERE D.IDN_NO = @idnNo
		 ]]>
	</select>
	
	<insert id="lionsclubs.com.MM7.MM7_1.MM7_01.insertDoc">
		<selectKey resultClass="String" keyProperty="idnNo">
			DECLARE @outgoingOrganCode NVARCHAR(8)	/* 보내는조직코드 */
			DECLARE @sessionYear NVARCHAR(10)	/* 회기년도 */
			DECLARE @no NVARCHAR(3)	/* 등록번호 뒤에3자리 */
			DECLARE @docNo NVARCHAR(21)	/* 문서번호 */

			SET @outgoingOrganCode = SUBSTRING(#outgoingOrganCode#, 1, 3) + '-' + SUBSTRING(#outgoingOrganCode#, 4, 3) + '-'
			SET @sessionYear = CAST(#sessionYear# - 1 AS NVARCHAR(4)) + '-' + CAST(#sessionYear# AS NVARCHAR(4)) + '-'
			SET @no = (
				SELECT dbo.LPAD(ISNULL(MAX(RIGHT(DOC_NO, 3)), 0) + 1, 3, 0)
				  FROM LIONS_DOC
				 WHERE SUBSTRING(DOC_NO, 1, 18) = @outgoingOrganCode + @sessionYear
			)
			
			SET @docNo = @outgoingOrganCode + @sessionYear + @no
			
			INSERT INTO LIONS_DOC(
				 STORAGE_DATE
				,DOC_NO
				,DOC_TITLE
				,DOC_CONTENT
				,DOC_CREATE_KIND
				,OUTGOING_ORGAN_CODE
				,FILE_ID
				,INSERT_DATE
				,INSERT_NAME
				,UPDATE_DATE
				,UPDATE_NAME
			) VALUES (
				 #storageDate#	/* 보존년한 */
				,@docNo	/* 문서번호 */
				,#docTitle#	/* 문서제목 */
				,#docContent#	/* 문서내용 */
				,#docCreateKind#	/* 작성중구분 */
				,#outgoingOrganCode#	/* 보내는조직코드 */
				,#fileId#	/* 파일ID */	
				,GETDATE()	/* 생성일자 */
				,#insertName#	/* 생성자 */
				,GETDATE()	/* 수정일자 */
				,#updateName#	/* 수정자 */
			)
		
			SELECT SCOPE_IDENTITY() AS idnNo
        </selectKey>
	</insert>
	
	<update id="lionsclubs.com.MM7.MM7_1.MM7_01.updateDoc">
		UPDATE LIONS_DOC
		   SET  STORAGE_DATE = #storageDate#
			   ,DOC_TITLE = #docTitle#
			   ,DOC_CONTENT = #docContent#
			   ,DOC_CREATE_KIND = #docCreateKind#
			   ,OUTGOING_ORGAN_CODE = #outgoingOrganCode#
			   ,UPDATE_DATE = GETDATE()
			   ,UPDATE_NAME = #updateName#
		 WHERE IDN_NO = #idnNo#
	</update>
	
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listOrganCode" resultClass="MM7_01VO">
		DECLARE @outgoingOrganCode NVARCHAR(6)	/* 보내는조직 */
		DECLARE @sectorDistrict NVARCHAR(6)	/* 소속지구코드 */
		DECLARE @sessionYear NVARCHAR(4)	/* 회기년도 */
		DECLARE @lvl NVARCHAR(6)	/* 조직레벨 */
		
		SET @outgoingOrganCode = #outgoingOrganCode#;
		SET @sessionYear = #sessionYear#;
		SET @lvl = #lvl#;
		
		<!-- 연합회 -->
		<isEqual property="outgoingLvl" compareValue="1">
			SELECT  OTY.ORGAN_CODE AS organCode
				   ,(SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = OTY.ORGAN_CODE) AS organName
			  FROM dbo.FN_LIONS_ORGAN_TREE_YEAR(@sessionYear) OTY
			 WHERE LVL IN(2, 3)
			   AND LVL = @lvl
			 ORDER BY OTY.ORGAN_CODE
		</isEqual>

		<!-- 복합지구 -->
		<isEqual property="outgoingLvl" compareValue="2">
			SELECT  OTY.ORGAN_CODE AS organCode
				   ,(SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = OTY.ORGAN_CODE) AS organName
			  FROM dbo.FN_LIONS_ORGAN_TREE_YEAR(@sessionYear) OTY
			 WHERE LVL IN(1, 2, 3)
			   AND LVL = @lvl
			 ORDER BY OTY.ORGAN_CODE
		</isEqual>
		
		<!-- 지구 -->
		<isEqual property="outgoingLvl" compareValue="3">
			SELECT * FROM(
				SELECT  OTY.ORGAN_CODE AS organCode
					   ,(SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = OTY.ORGAN_CODE) AS organName
					   ,OTY.LVL
				  FROM dbo.FN_LIONS_ORGAN_TREE_YEAR(@sessionYear) OTY
				 WHERE LVL IN(1, 2, 3)
				 
				 UNION ALL
				 
				SELECT  STYO.ORGAN_CODE AS organCode
					   ,(SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = STYO.ORGAN_CODE) AS organName
					   ,4 AS LVL
				  FROM dbo.FN_LIONS_SUB_TREE_YEAR_ORGAN(@sessionYear, @outgoingOrganCode) STYO
				 WHERE LVL = 2
			) R
			 WHERE R.LVL = @lvl
			 ORDER BY R.organCode
		</isEqual>
		
		<!-- 클럽 -->
		<isEqual property="outgoingLvl" compareValue="4">
			SELECT @sectorDistrict = dbo.FN_GetIdxDataLikeSplit(PATH_CODE, 3, '/')	/* 소속지구코드 */ 
			  FROM dbo.FN_LIONS_ORGAN_TREE_YEAR(@sessionYear) 
			 WHERE ORGAN_CODE = @outgoingOrganCode
			
			SELECT * FROM(		
				SELECT  @sectorDistrict AS organCode	/* 소속지구코드 */ 
					   ,(SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = @sectorDistrict) AS organName	/* 소속지구명 */ 
					   ,3 AS LVL
				 
				 UNION ALL
				 
				SELECT  STYO.ORGAN_CODE AS organCode
					   ,(SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = STYO.ORGAN_CODE) AS organName
					   ,4 AS LVL
				  FROM dbo.FN_LIONS_SUB_TREE_YEAR_ORGAN(@sessionYear, @sectorDistrict) STYO
				 WHERE LVL IN(2, 3)
			 ) R
			 WHERE R.LVL = @lvl
			 ORDER BY R.organCode
		</isEqual>
	</select>
	
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listReceiveOrganCode" resultClass="MM7_01VO">
		SELECT  DR.RECEIVE_ORGAN_CODE AS receiveOrganCode	/* 받는조직코드 */
			   ,(SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = DR.RECEIVE_ORGAN_CODE) AS receiveOrganName	/* 받는조직명 */
			   ,DR.RECEIVE_KIND AS receiveKind	/* 수신(R)/참조(S)/숨은참조(B) 구분 */
		  FROM LIONS_DOC_RECEIVE DR
		 WHERE IDN_NO = #idnNo#
		 ORDER BY DR.RECEIVE_ORGAN_CODE
	</select>
	
	<insert id="lionsclubs.com.MM7.MM7_1.MM7_01.insertDocReceive">
		INSERT INTO LIONS_DOC_RECEIVE(
			 IDN_NO
			,RECEIVE_ORGAN_CODE
			,RECEIVE_KIND
			,INSERT_DATE
			,INSERT_NAME
			,UPDATE_DATE
			,UPDATE_NAME
		) VALUES (
			 #idnNo#	/* 번호 */
			,#receiveOrganCode#	/* 받는조직코드 */
			,#receiveKind#	/* 수신(R)/참조(S)/숨은참조(B) 구분 */
			,GETDATE()	/* 생성일자 */
			,#insertName#	/* 생성자 */
			,GETDATE()	/* 수정일자 */
			,#updateName#	/* 수정자 */
		)
	</insert>

	<delete id="lionsclubs.com.MM7.MM7_1.MM7_01.deleteDoc">
		DELETE FROM LIONS_DOC
		 WHERE IDN_NO = #idnNo#
	</delete>
	
	<delete id="lionsclubs.com.MM7.MM7_1.MM7_01.deleteDocReceive">
		DELETE FROM LIONS_DOC_RECEIVE
		 WHERE IDN_NO = #idnNo#
	</delete>

	<delete id="lionsclubs.com.MM7.MM7_1.MM7_01.deleteDocSearchMember">
		DELETE FROM LIONS_DOC_SEARCH_MEMBER
		 WHERE IDN_NO = #idnNo#
	</delete>
	
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listReceive" resultClass="MM7_01VO">
		SELECT * FROM(
			SELECT  DR.IDN_NO AS idnNo
				   ,DR.RECEIVE_ORGAN_CODE AS receiveOrganCode
				   ,SUBSTRING(DR.RECEIVE_ORGAN_CODE, 1, 3) + '-' + SUBSTRING(DR.RECEIVE_ORGAN_CODE, 4, 3) + ' ' + (SELECT KO_ABBR FROM LIONS_ORGAN_CODE WHERE ORGAN_CODE = DR.RECEIVE_ORGAN_CODE) AS receiveOrganName
				   ,(SELECT MIN(SEARCH_DATE) FROM LIONS_DOC_SEARCH_MEMBER WHERE IDN_NO = DR.IDN_NO AND RECEIVE_ORGAN_CODE = DR.RECEIVE_ORGAN_CODE) AS searchDate
				   ,STUFF((
						 SELECT ';' + (SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = DSR.SEARCH_MEMBER_NO)
						   FROM LIONS_DOC_SEARCH_MEMBER DSR
						  WHERE DSR.IDN_NO = DR.IDN_NO
							AND RECEIVE_ORGAN_CODE = DR.RECEIVE_ORGAN_CODE
							FOR XML PATH('')
					), 1, 1, '') AS receiveMember	/* 수신자(받는사람) */
			  FROM LIONS_DOC_RECEIVE DR
			 WHERE IDN_NO = #idnNo#
		) R
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="receiveOrganName">
				R.receiveOrganName LIKE '%' + #receiveOrganName# + '%'
			</isNotEmpty>
		</dynamic>
		 ORDER BY R.receiveOrganCode
	</select>
	
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listReceiveMember" resultClass="MM7_01VO">
		DECLARE @idnNo INT	/* 번호 */
		DECLARE @receiveOrganCode NVARCHAR(6)	/* 수신 조직코드 */
		
		SET @idnNo = #idnNo#
		SET @receiveOrganCode = #receiveOrganCode#;
		
		<![CDATA[
		SELECT  (SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = DSM.SEARCH_MEMBER_NO) AS name	/* 수신자 */
			   ,ISNULL(CONVERT(NVARCHAR(19), DSM.SEARCH_DATE, 120), '') AS searchDate	/* 수신일 */
		  FROM LIONS_DOC_SEARCH_MEMBER DSM
		 WHERE DSM.IDN_NO = @idnNo
		   AND DSM.RECEIVE_ORGAN_CODE = @receiveOrganCode
	 	]]>
	</select>
	 
	<insert id="lionsclubs.com.MM7.MM7_1.MM7_01.saveDocSearchMember">
		<include refid="lionsclubs.com.MM7.MM7_1.MM7_01.declare" />
		
		DECLARE DOC_SEARCH_MEMBER_SAVE CURSOR FOR 
			/* 문서읽기권한 직책 리스트 */
			WITH DOC_WRITE_TITLE_CODE AS(
				SELECT  C1.CODE AS APP_KIND_CODE
					   ,C2.CODE	AS APP_DESC_CODE
				  FROM LIONS_CODE C1
				 INNER JOIN LIONS_CODE C2
					ON C1.CODE1 = C2.GROUP_CODE
				 WHERE C1.GROUP_CODE = '2700'
				   AND C2.CODE3 LIKE '%R%'
			), DOC_READ_ORGAN_CODE AS(
				SELECT R.organCode
				  FROM(
					SELECT CODE_NAME AS organCode
					  FROM LIONS_CODE
					 WHERE GROUP_CODE = (SELECT CODE1 FROM LIONS_CODE WHERE GROUP_CODE = '9520' AND CODE_NAME = @memberNo)		  
				  	
				  	 UNION				  
				  
					SELECT organCode
					  FROM(
						SELECT  @clubCode AS organCode
							   ,1000 AS APP_KIND_CODE
							   ,9000 AS APP_DESC_CODE
					) A
					 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
						ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
					   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
					
					UNION
							
					SELECT A.APP_SECTOR_CODE AS organCode
					  FROM LIONS_APPOINTMENT A
					 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
						ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
					   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
					 WHERE A.MEMBER_NO = @memberNo
					 <![CDATA[
					   AND (
							   (A.START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
							OR (A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
							OR (A.START_DATE <= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701') /* '20120701' >= START_DATE AND '20120701' <= END_DATE */
							OR (A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630' AND A.END_DATE >= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
						)
					 ]]>
				  ) R
			)
			SELECT organCode 
			  FROM DOC_READ_ORGAN_CODE
		OPEN DOC_SEARCH_MEMBER_SAVE
		
		FETCH NEXT FROM DOC_SEARCH_MEMBER_SAVE 
				   INTO @organCode
		PRINT '----- CURSOR DOCUMENT START -----'
		WHILE @@FETCH_STATUS = 0
		BEGIN		
		
			IF NOT EXISTS (
				SELECT 1 
				  FROM LIONS_DOC_SEARCH_MEMBER 
				 WHERE IDN_NO = @idnNo 
				   AND RECEIVE_ORGAN_CODE = @organCode
				   AND SEARCH_MEMBER_NO = @memberNo
				 
				 UNION
				 
				SELECT 1 
				  FROM LIONS_CODE
				 WHERE GROUP_CODE = '9519'
				   AND CODE_NAME = @memberNo
			)
		
			INSERT INTO LIONS_DOC_SEARCH_MEMBER (
				 IDN_NO
				,RECEIVE_ORGAN_CODE
				,SEARCH_MEMBER_NO
				,SEARCH_DATE
			) VALUES (
				 @idnNo
				,@organCode
				,@memberNo
				,GETDATE()
			)
		
		FETCH NEXT FROM DOC_SEARCH_MEMBER_SAVE 
				   INTO @organCode
		END   
		PRINT '----- CURSOR DOCUMENT END   -----'
		CLOSE DOC_SEARCH_MEMBER_SAVE
		DEALLOCATE DOC_SEARCH_MEMBER_SAVE
    </insert>
    
    <update id="lionsclubs.com.MM7.MM7_1.MM7_01.updateOutgoingCancel">
    	UPDATE LIONS_DOC
    	   SET DOC_CREATE_KIND = 'Y'
    	 WHERE IDN_NO = #idnNo#
    </update>
    
	<select id="lionsclubs.com.MM7.MM7_1.MM7_01.listWriteOrganCode" resultClass="MM7_01VO">
		<include refid="lionsclubs.com.MM7.MM7_1.MM7_01.declare" />
		
		/* 문서쓰기권한 직책 리스트 */
		WITH DOC_WRITE_TITLE_CODE AS(
			SELECT  C1.CODE AS APP_KIND_CODE
				   ,C2.CODE	AS APP_DESC_CODE
			  FROM LIONS_CODE C1
			 INNER JOIN LIONS_CODE C2
				ON C1.CODE1 = C2.GROUP_CODE
			 WHERE C1.GROUP_CODE = '2700'
			   AND C2.CODE3 LIKE '%W%'
		)
		
		SELECT  R.organCode
			   ,R.organName
			   ,R.outgoingLvl
			   ,CASE WHEN R.outgoingLvl IN(1, 2)
			   		 THEN 3
			   		 WHEN R.outgoingLvl IN(3, 4)
			   		 THEN 4
			   		  END AS lvl
		  FROM(
			SELECT  CODE_NAME AS organCode
				   ,SUBSTRING(CODE_NAME, 1, 3) + '-' + SUBSTRING(CODE_NAME, 4, 3) + ' ' + dbo.FN_LIONS_ORGAN_NAME(CODE_NAME) AS organName
				   ,(SELECT LVL FROM dbo.FN_LIONS_ORGAN_TREE_YEAR(@sessionYear) WHERE ORGAN_CODE = CODE_NAME) AS outgoingLvl
			  FROM LIONS_CODE
			 WHERE GROUP_CODE = (SELECT CODE1 FROM LIONS_CODE WHERE GROUP_CODE = '9520' AND CODE_NAME = @memberNo)		  
		  	
		  	 UNION
		  	 
			SELECT  organCode
				   ,organName
				   ,outgoingLvl
			  FROM(
				SELECT  @clubCode AS organCode
					   ,SUBSTRING(@clubCode, 1, 3) + '-' + SUBSTRING(@clubCode, 4, 3) + ' ' + dbo.FN_LIONS_ORGAN_NAME(@clubCode) AS organName
					   ,1000 AS APP_KIND_CODE
					   ,9000 AS APP_DESC_CODE
					   ,(SELECT LVL FROM dbo.FN_LIONS_ORGAN_TREE_YEAR(@sessionYear) WHERE ORGAN_CODE = @clubCode) AS outgoingLvl
			) A
			 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
			    ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
			   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
			
			UNION
					
			SELECT  A.APP_SECTOR_CODE AS organCode
				   ,SUBSTRING(A.APP_SECTOR_CODE, 1, 3) + '-' + SUBSTRING(A.APP_SECTOR_CODE, 4, 3) + ' ' + dbo.FN_LIONS_ORGAN_NAME(A.APP_SECTOR_CODE) AS organName
				   ,(SELECT LVL FROM dbo.FN_LIONS_ORGAN_TREE_YEAR(@sessionYear) WHERE ORGAN_CODE = A.APP_SECTOR_CODE) AS outgoingLvl
			  FROM LIONS_APPOINTMENT A
			 INNER JOIN DOC_WRITE_TITLE_CODE DWTC
			    ON A.APP_KIND_CODE = DWTC.APP_KIND_CODE
			   AND A.APP_DESC_CODE = DWTC.APP_DESC_CODE
			 WHERE A.MEMBER_NO = @memberNo
			 <![CDATA[
			   AND (
					   (A.START_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
					OR (A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
					OR (A.START_DATE <= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' AND A.END_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701') /* '20120701' >= START_DATE AND '20120701' <= END_DATE */
					OR (A.START_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630' AND A.END_DATE >= CAST(@sessionYear AS NVARCHAR(4)) + '0630')
				)
		 	]]>		  
		  ) R
	</select>
</sqlMap>
