<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM3.MM3_3.MM3_09">
	<typeAlias alias="MM3_09VO" type="lionsclubs.com.MM3.MM3_3.MM3_09.MM3_09VO"/>
	 	<select id="lionsclubs.com.MM3.MM3_3.MM3_09.selectList" resultClass="MM3_09VO">
			<![CDATA[
	DECLARE @orgCode NVARCHAR(10)
	DECLARE @thisYear NVARCHAR(4)
	DECLARE @fromDate NVARCHAR(8)
	DECLARE @toDate NVARCHAR(8)

	SET @orgCode = #orgCode#;
	SET @thisYear = #thisYear#;
	SET @fromDate = CAST(CAST(@thisYear as INT) - 1 as NVARCHAR(4)) + '0701';
	SET @toDate = CAST(@thisYear as NVARCHAR(4)) + '0630';
	
	WITH 
	ORG_TREE_TO AS ( /* 전체 조직트리 - 현재회기 */
		SELECT 
			A2.ORGAN_CODE as ORGAN_CODE
			, A2.UPPER_ORGAN_CODE as UPPER_ORGAN_CODE
			, A2.ORGAN_OFFICER_MEMBER_NO as ORGAN_OFFICER_MEMBER_NO
			, CAST(A2.TARGET_MEMBER as INT) as TARGET_MEMBER
			, D.ORGAN_ABOLISH_DATE as ORGAN_ABOLISH_DATE
			, D.SPOT_NIGHT as SPOT_NIGHT
		FROM dbo.LIONS_ORGAN_CODE_HISTORY A2 
		INNER JOIN dbo.LIONS_ORGAN_CODE D ON D.ORGAN_CODE = A2.ORGAN_CODE
		WHERE D.SPOT_NIGHT != '' 
			   AND (D.ORGAN_ABOLISH_DATE >= @fromDate OR D.ORGAN_ABOLISH_DATE = '')	
			   AND A2.IDN_NO IN (
					SELECT
					MAX(B.IDN_NO) OVER(PARTITION BY B.ORGAN_CODE) as IDN_NO
					FROM (
						SELECT
						ORGAN_CODE,
						MAX(CHANGE_DATE) CHANGE_DATE
						FROM dbo.LIONS_ORGAN_CODE_HISTORY
						WHERE CHANGE_DATE BETWEEN @fromDate AND @toDate
						GROUP BY ORGAN_CODE
					) A
					INNER JOIN dbo.LIONS_ORGAN_CODE_HISTORY B
					ON B.ORGAN_CODE = A.ORGAN_CODE AND B.CHANGE_DATE = A.CHANGE_DATE
			)
	),
	
	CLUB_CODE_TO AS ( /* 클럽코드  현재 */
		SELECT
			   A.ORGAN_CODE as LVL1_CODE
			  ,B.ORGAN_CODE as LVL2_CODE
			  ,C.ORGAN_CODE as LVL3_CODE
			  ,D.ORGAN_CODE as LVL4_CODE
			  ,D.ORGAN_ABOLISH_DATE as ORGAN_ABOLISH_DATE
			  ,D.SPOT_NIGHT as SPOT_NIGHT
			  ,D.TARGET_MEMBER as TARGET_MEMBER
			  ,D.ORGAN_OFFICER_MEMBER_NO
		FROM ORG_TREE_TO A
		INNER JOIN ORG_TREE_TO B ON B.UPPER_ORGAN_CODE = A.ORGAN_CODE
		INNER JOIN ORG_TREE_TO C ON C.UPPER_ORGAN_CODE = B.ORGAN_CODE
		INNER JOIN ORG_TREE_TO D ON D.UPPER_ORGAN_CODE = C.ORGAN_CODE		
		 WHERE C.ORGAN_CODE = @orgCode
	),
	
	CLUB_CODE_OUT AS (
		select 
			 LVL1_CODE
			,LVL2_CODE
			,LVL3_CODE
			,LVL4_CODE
		from CLUB_CODE_TO
		where ORGAN_ABOLISH_DATE >= @fromDate AND ORGAN_ABOLISH_DATE < @toDate
	),
	

	MEMBER_CNT_TO AS ( /*회원수 현재(현재회기) */
		SELECT			
			B.ORGAN_CODE as ORGAN_CODE,			
			COUNT(DISTINCT B.MEMBER_NO) as MEMBER_CNT_TO
		FROM (
			SELECT
				H.MEMBER_NO,
				C.LVL4_CODE as ORGAN_CODE			/* 클럽코드 */
			FROM dbo.LIONS_MEMBER_CLUB_HIST H
			INNER JOIN CLUB_CODE_TO C ON C.LVL4_CODE = H.ORGAN_CODE
			/* 클럽만 퇴회 처리되고 회원이 퇴회처리안된 회원은 카운트안되도록 처리 : 2014-11-24 */
			LEFT OUTER JOIN CLUB_CODE_OUT O ON O.LVL4_CODE = C.LVL4_CODE 
			WHERE H.[START_DATE] <= @toDate AND H.END_DATE > @toDate
			AND O.LVL4_CODE is null		
		) B 
		GROUP BY B.ORGAN_CODE			
	),
	
	MEMBER_CNT_NEW AS ( /* 회원수 입회(현재회기) */
		SELECT			
			B.ORGAN_CODE as ORGAN_CODE,			
			COUNT(B.MEMBER_NO) as MEMBER_CNT_NEW
		FROM (
				SELECT
					H.MEMBER_NO,
					C.LVL4_CODE as ORGAN_CODE		/* 클럽코드 */					
				FROM dbo.LIONS_APPOINTMENT H
				INNER JOIN CLUB_CODE_TO C ON C.LVL4_CODE = H.ORGAN_CODE	
				WHERE H.APP_KIND_CODE = '1040' AND H.APP_DESC_CODE IN ('1000','1020','1030')				
				AND H.[START_DATE] BETWEEN @fromDate AND @toDate	
		) B  		
		GROUP BY B.ORGAN_CODE	
	)
	,MEMBER_CNT_OUT AS ( /* 회원수 퇴회(현재회기) */
		SELECT			
			B.ORGAN_CODE as ORGAN_CODE,			
			COUNT(B.MEMBER_NO) as MEMBER_CNT_OUT
		FROM (
				SELECT
					H.MEMBER_NO,
					C.LVL4_CODE as ORGAN_CODE		/* 클럽코드 */					
				FROM dbo.LIONS_APPOINTMENT H
				INNER JOIN CLUB_CODE_TO C ON C.LVL4_CODE = H.ORGAN_CODE	
				WHERE H.APP_KIND_CODE = '1050'
				AND H.[START_DATE] BETWEEN @fromDate AND @toDate	
		) B  		
		GROUP BY B.ORGAN_CODE		
	)
		SELECT
			 ISNULL(A.LVL4_CODE,0) as organCodeClub		
			,(SELECT ISNULL(KO_NAME,'Not Club') FROM dbo.LIONS_ORGAN_CODE WHERE ORGAN_CODE=A.LVL4_CODE) as organNmClub
			,(SELECT ISNULL(ORGAN_MEETING,'') FROM dbo.LIONS_ORGAN_CODE WHERE ORGAN_CODE=A.LVL4_CODE) as organMeeting
			,(SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = A.ORGAN_OFFICER_MEMBER_NO) AS memberNm
			,ISNULL(A.TARGET_MEMBER, 0) as targetMember 
			,ISNULL(E.MEMBER_CNT_TO	,0) as totCnt
			,ISNULL(C.MEMBER_CNT_NEW,0) as regCnt
			,ISNULL(D.MEMBER_CNT_OUT,0) as outCnt
			,ISNULL(C.MEMBER_CNT_NEW,0) -  ISNULL(D.MEMBER_CNT_OUT,0) as resultCnt
		FROM CLUB_CODE_TO A
		LEFT OUTER JOIN MEMBER_CNT_NEW C ON	C.ORGAN_CODE = A.LVL4_CODE	
		LEFT OUTER JOIN MEMBER_CNT_OUT D ON D.ORGAN_CODE = A.LVL4_CODE	
		LEFT OUTER JOIN MEMBER_CNT_TO E	ON E.ORGAN_CODE = A.LVL4_CODE
		LEFT OUTER JOIN CLUB_CODE_OUT O ON O.LVL4_CODE = A.LVL4_CODE
		WHERE O.LVL4_CODE is null
		ORDER BY A.LVL4_CODE
			]]>
 	</select>
</sqlMap>
