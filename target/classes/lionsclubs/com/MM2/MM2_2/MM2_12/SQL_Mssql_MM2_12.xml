<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM2.MM2_2.MM2_12">

	<typeAlias alias="MM2_12VO" type="lionsclubs.com.MM2.MM2_2.MM2_12.MM2_12VO"/>

	<sql id="lionsclubs.com.MM2.MM2_2.declare">
		DECLARE @organCode NVARCHAR(6)
		DECLARE @sessionYear INT
		DECLARE @startDate INT
		DECLARE @endDate INT
		DECLARE @month INT
		
		SET @organCode = REPLACE(#organCode#, '-', '');
		SET @sessionYear = #sessionYear#;
		SET @startDate = CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701';
		SET @endDate = CAST(@sessionYear AS NVARCHAR(4)) + '0630';
		SET @month = #month#;
		
		WITH INCOME_EXPEND_BASIC AS(
			SELECT  ROW_NUMBER() OVER( ORDER BY  R.classItemCode
												,R.detailItemCode) AS order1
				   ,R.idnNo
				   ,R.memberNo
				   ,R.name
				   ,R.paymentCount
				   ,R.genDate
				   ,R.classItemCode
				   ,R.detailItemCode
				   ,R.classItemName
				   ,R.detailItemName
				   ,R.impost
				   ,R.payment
				   ,R.paymentDefect
				   ,ISNULL(R.impost, 0) - (ISNULL(R.payment, 0) + ISNULL(R.paymentDefect, 0)) AS balance
				   ,R.reference
			  FROM(		
					SELECT  P.IDN_NO AS idnNo
						   ,MIN(P.MEMBER_NO) AS memberNo
						   ,(SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = MIN(P.MEMBER_NO)) AS name
						   ,NULL AS paymentCount
						   ,MIN(P.GEN_DATE) AS genDate
						   ,MIN(P.CLASS_ITEM_CODE) AS classItemCode
						   ,MIN(P.DETAIL_ITEM_CODE) AS detailItemCode
						   ,MIN(P.classItemName) AS classItemName
						   ,MIN(P.detailItemName) AS detailItemName
						   ,MIN(P.IMPOST) AS impost
						   ,SUM(P.payment) AS payment
						   ,SUM(P.paymentDefect) AS paymentDefect
						   ,MIN(P.reference) AS reference
					  FROM(
						SELECT  MM.IDN_NO	/* 번호 */
							   ,MM.MEMBER_NO	/* 회원번호 */
							   ,MM.GEN_DATE	/* 발생일자 */
							   ,MM.CLASS_ITEM_CODE	/* 분류항목코드 */
							   ,MM.DETAIL_ITEM_CODE	/* 세부항목코드 */
							   ,dbo.FN_LIONS_CODE_NAME('4100', MM.CLASS_ITEM_CODE) AS classItemName	/* 분류항목명 */
							   ,dbo.FN_LIONS_DETAILCODE_NAME('4100', MM.CLASS_ITEM_CODE, MM.DETAIL_ITEM_CODE) AS detailItemName	/* 세부항목명 */
							   ,MI.IMPOST	/* 부과금 */
							   ,CASE WHEN MP.PAYMENT_DEFECT != 'Y'
									 THEN MP.PAYMENT
									  END AS payment	/* 납부금 */
							   ,CASE WHEN MP.PAYMENT_DEFECT = 'Y'
									 THEN MP.PAYMENT
									  END AS paymentDefect	/* 결손금 */
							   ,MI.REFERENCE	/* 참고사항 */
						  FROM LIONS_MONEY_MASTER MM
						  LEFT OUTER JOIN LIONS_MONEY_IMPOST MI
							ON MM.IDN_NO = MI.IDN_NO
						  LEFT OUTER JOIN LIONS_MONEY_PAYMENT MP
							ON MM.IDN_NO = MP.IDN_NO
						 WHERE MM.ORGAN_CODE = @organCode
						   AND MM.CLASS_ITEM_CODE NOT IN('1030', '1040')
						<isNotEmpty prepend="AND" property="sessionYear">
						<![CDATA[
							    MP.PAYMENT_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701'
							AND MP.PAYMENT_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630'
						]]>
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="month">
							SUBSTRING(MP.PAYMENT_DATE, 5, 2) = @month
						</isNotEmpty>
					) P
					 GROUP BY P.IDN_NO
					 
					 UNION ALL
					 
					SELECT  MM.IDN_NO AS idnNo	/* 번호 */
						   ,MM.MEMBER_NO AS memberNo
						   ,(SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = MM.MEMBER_NO) AS name
						   ,MP.PAYMENT_COUNT AS paymentCount	/* 납부카운트 */
						   ,MP.PAYMENT_DATE AS genDate	/* 부과일자 */
						   ,MM.CLASS_ITEM_CODE AS classItemCode	/* 분류항목코드 */
						   ,MM.DETAIL_ITEM_CODE AS detailItemCode	/* 세부항목코드 */
						   ,dbo.FN_LIONS_CODE_NAME('4100', MM.CLASS_ITEM_CODE) AS classItemName	/* 분류항목명 */
						   ,dbo.FN_LIONS_DETAILCODE_NAME('4100', MM.CLASS_ITEM_CODE, MM.DETAIL_ITEM_CODE) AS detailItemName	/* 세부항목명 */
						   ,MP.PAYMENT AS impost	/* 부과금 */
						   ,CASE WHEN MP.PAYMENT_DEFECT != 'Y'
								 THEN MP.PAYMENT
								  END AS payment	/* 납부금 */
						   ,CASE WHEN MP.PAYMENT_DEFECT = 'Y'
								 THEN MP.PAYMENT
								  END AS paymentDefect	/* 결손금 */
						   ,MI.REFERENCE AS reference	/* 참고사항 */
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					 INNER JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					 WHERE MM.ORGAN_CODE = @organCode
					   AND MM.CLASS_ITEM_CODE IN('1030', '1040')
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    MP.PAYMENT_DATE >= CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701'
						AND MP.PAYMENT_DATE <= CAST(@sessionYear AS NVARCHAR(4)) + '0630'
					]]>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="month">
						SUBSTRING(MP.PAYMENT_DATE, 5, 2) = @month
					</isNotEmpty>					      	
			  ) R
			<dynamic prepend="WHERE" open="(" close=")">
				<isNotEmpty prepend="OR" property="fullPayment">
					ISNULL(R.impost, 0) - (ISNULL(R.payment, 0) + ISNULL(R.paymentDefect, 0)) = 0
				</isNotEmpty>
				<isNotEmpty prepend="OR" property="defaultPayment">
					ISNULL(R.impost, 0) - (ISNULL(R.payment, 0) + ISNULL(R.paymentDefect, 0)) > 0
				</isNotEmpty>
			</dynamic>			  		
		)
	</sql>
	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_12.MM2_12" resultClass="MM2_12VO">
		<include refid="lionsclubs.com.MM2.MM2_2.declare"/>
		SELECT  MIN(order1) AS order1
			   ,1 AS order2
			   ,'1_' + classItemCode AS id
			   ,NULL AS paymentCount
			   ,NULL AS parent
			   ,MIN(classItemCode) AS classItemCode
			   ,MIN(detailItemCode) AS detailItemCode
			   ,MIN(classItemName) AS classItemName
			   ,NULL AS detailItemName
			   ,NULL AS genDate
			   ,SUM(impost) AS impost
			   ,SUM(payment) AS payment
			   ,SUM(paymentDefect) AS paymentDefect
			   ,SUM(balance) AS balance
			   ,NULL AS reference
			   ,NULL AS last
		  FROM INCOME_EXPEND_BASIC
		 GROUP BY classItemCode
		 
		 UNION ALL
		 
		SELECT  MIN(order1) AS order1
			   ,2 AS order2
			   ,'2_' + classItemCode + detailItemCode AS id
			   ,NULL AS paymentCount
			   ,'1_' + classItemCode AS parent
			   ,MIN(classItemCode) AS classItemCode
			   ,MIN(detailItemCode) AS detailItemCode
			   ,NULL AS classItemName
			   ,MIN(detailItemName) AS detailItemName
			   ,NULL AS genDate
			   ,SUM(impost) AS impost
			   ,SUM(payment) AS payment
			   ,SUM(paymentDefect) AS paymentDefect
			   ,SUM(balance) AS balance
			   ,NULL AS reference
			   ,NULL AS last
		  FROM INCOME_EXPEND_BASIC
		 GROUP BY  classItemCode
		          ,detailItemCode
		          
		 UNION ALL
		 
		SELECT  order1
			   ,3 AS order2
			   ,CAST(idnNo AS NVARCHAR) AS id
			   ,paymentCount
			   ,'2_' + classItemCode + detailItemCode AS parent
			   ,classItemCode
			   ,detailItemCode
			   ,NULL AS classItemName
			   ,name + '(' + memberNo + ')' AS detailItemName				
			   ,genDate
			   ,impost
			   ,payment
			   ,paymentDefect
			   ,balance
			   ,reference
			   ,'last' AS last
		   FROM INCOME_EXPEND_BASIC
		   
		  ORDER BY  order1
		  		   ,order2
		  		   ,genDate DESC
	</select>
	
	<select id="lionsclubs.com.MM2.MM2_2.MM2_12.sum" resultClass="MM2_12VO">
		<include refid="lionsclubs.com.MM2.MM2_2.declare"/>
		SELECT  SUM(impost) AS impost
			   ,SUM(payment) AS payment
			   ,SUM(paymentDefect) AS paymentDefect
			   ,SUM(balance) AS balance
		  FROM INCOME_EXPEND_BASIC
	</select>
</sqlMap>
