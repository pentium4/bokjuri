<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.SM1.SM1_4.SM1_15">
	<typeAlias alias="SM1_15VO" type="lionsclubs.com.SM1.SM1_4.SM1_15.SM1_15VO"/>

	<sql id="lionsclubs.com.SM1.SM1_4.SM1_15.selectQuery">
		DECLARE @sessionYear NVARCHAR(4);	/* 현회선택 */
		DECLARE @organCode NVARCHAR(6);	/* 조직코드 */
		DECLARE @startDate NVARCHAR(6);
		DECLARE @endDate NVARCHAR(6);
		
		SET @sessionYear = #sessionYear#;
		SET @organCode = REPLACE(#organCode#, '-', '');
		SET @startDate = CAST(@sessionYear - 1 AS NVARCHAR(4)) + '07';	
		SET @endDate = CAST(@sessionYear AS NVARCHAR(4)) + '06';
		
		<![CDATA[
		SELECT  ORGAN_CODE AS organCode	/* 조직코드 */
			   ,CA_YM AS caYm	/* 회기년월 */
			   ,CONFIRM_DATE AS confirmDate	/* 정산일 */
			   ,CONFIRM_COUNT AS confirmCount	/* 정산횟수 */
			   ,CONFIRM_YN AS confirmYn	/* 정산여부 */
			   ,MONTH_TOTAL AS monthTotal	/* 이월총잔액 */
			   ,MONTH_REMAIN AS monthRemain	/* 이월잔액 */
			   ,DEPOSIT_TOTAL AS depositTotal	/* 이월정기예금 */
			   ,NOT_INCOME_1000_TOTAL AS notIncome1000Total	/* 이월회비미수금 */
			   ,NOT_INCOME_ETC_TOTAL AS notIncomeEtcTotal	/* 이월기타미수금 */
			   ,CONFIRM_LOCK_YN AS confirmLockYn	/* 정산확정여부 */
			   ,CONFIRM_LOCK_DATE AS confirmLockDate	/* 정산확정일 */
			   ,INSERT_DATE AS insertDate	/* 생성일자 */
			   ,INSERT_NAME AS insertName	/* 생성자 */
			   ,UPDATE_DATE AS updateDate	/* 수정일자 */
			   ,UPDATE_NAME	AS updateName	/* 수정자 */
		  FROM LIONS_CALCULATE
		 WHERE ORGAN_CODE = @organCode
		   AND CA_YM >= @startDate
		   AND CA_YM <= @endDate
		]]>
	</sql>
	
	<select id="lionsclubs.com.SM1.SM1_4.SM1_15.SM1_15" resultClass="SM1_15VO">
		<include refid="lionsclubs.com.SM1.SM1_4.SM1_15.selectQuery" />
 	</select>
 	
 	<sql id="lionsclubs.com.SM1.SM1_4.SM1_15.declare">
		DECLARE @organCode NVARCHAR(6);
		DECLARE @sessionYear INT;
		DECLARE @month NVARCHAR(2);
		DECLARE @sessionYearMonth NVARCHAR(6);
		DECLARE @prevSessionYearMonth NVARCHAR(6);
		DECLARE @nextSessionYearMonth NVARCHAR(6);
		DECLARE @startDate NVARCHAR(8);
		DECLARE @endDate NVARCHAR(8);
		
		DECLARE @prev INT;	/* 이월 합계 */
		DECLARE @income INT;	/* 수입 합계 */
		DECLARE @expend INT;	/* 지출 합계 */
		DECLARE @deposit INT;	/* 예금 합계 */
		DECLARE @dues INT;	/* 회비미수금 합계 */
		DECLARE @etc INT;	/* 기타미수금 합계 */
		
		SET @organCode = REPLACE(#organCode#, '-', '');
		SET @sessionYear = #sessionYear#;
		SET @month = #month#;
		
		<![CDATA[
		SET @sessionYearMonth = CASE WHEN CAST(@month AS INT) < 7 
								  	 THEN CAST(@sessionYear AS NVARCHAR(4)) + @month 
								  	 ELSE CAST(@sessionYear - 1 AS NVARCHAR(4)) + @month 
								   	  END;
		SET @startDate = CASE WHEN @month = '' 
							  THEN CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701' 
							  ELSE @sessionYearMonth + '01' 
							   END;
		SET @endDate = CASE WHEN @month = '' 
							THEN CAST(@sessionYear AS NVARCHAR(4)) + '0630' 
							ELSE @sessionYearMonth + '31' 
							 END;
		SET @prevSessionYearMonth = CONVERT(CHAR(6), DATEADD(MM, -1, @sessionYearMonth + '01') , 112);
		SET @nextSessionYearMonth = CONVERT(CHAR(6), DATEADD(MM, 1, @sessionYearMonth + '01') , 112);
		]]> 	
 	</sql>
 	
 	<update id="lionsclubs.com.SM1.SM1_4.SM1_15.updateCalculateConfirm">
		<include refid="lionsclubs.com.SM1.SM1_4.SM1_15.declare" />
		<![CDATA[
		/* 수입합계 */
		SET @income = (
			SELECT ISNULL(SUM(A.AMOUNT_SUM), 0) AS amountSum
			  FROM (
				SELECT ISNULL(SUM(B.PAYMENT), 0) AS AMOUNT_SUM
				  FROM dbo.LIONS_MONEY_MASTER A
				 INNER JOIN dbo.LIONS_MONEY_PAYMENT B
					ON B.IDN_NO = A.IDN_NO 
				   AND B.PAYMENT_DEFECT != 'Y' 
				 WHERE A.ORGAN_CODE = @organCode 
				   AND B.PAYMENT_DATE BETWEEN @startDate AND @endDate
				   
				 UNION ALL
				 
				SELECT ISNULL(SUM(AMOUNT), 0) AS AMOUNT_SUM
				  FROM LIONS_INCOME_EXPEND
				 WHERE ORGAN_CODE = @organCode
				   AND INEX_CODE = '1000'
				   AND INEX_DATE BETWEEN @startDate AND @endDate
				   
				 UNION ALL
					 
				SELECT ISNULL(SUM(EXPIRE_AMOUNT), 0) AS AMOUNT_SUM
				  FROM LIONS_DEPOSIT
				 WHERE ORGAN_CODE = @organCode
				   AND END_DATE BETWEEN @startDate AND @endDate
				   AND WITHDRAW_YN = 'Y'
			) A
		)
		
		/* 지출합계 */
		SET @expend = (
			SELECT ISNULL(SUM(AMOUNT_SUM), 0)
			  FROM(
				SELECT SUM(ISNULL(A.AMOUNT,0)) AS AMOUNT_SUM
				  FROM dbo.LIONS_INCOME_EXPEND A
				 INNER JOIN dbo.LIONS_CODE B
					ON B.GROUP_CODE = '6000' AND B.CODE = A.CLASS_ITEM_CODE
				 WHERE A.ORGAN_CODE = @organCode
				   AND A.INEX_CODE = '1010'
				   AND A.INEX_DATE BETWEEN @startDate AND @endDate
			) T
		)
		
		/* 예금합계 */
		SET @deposit = (
			SELECT SUM(amount) AS amount
			  FROM(		
				SELECT CASE WHEN SUBSTRING(END_DATE, 5, 2) = @month AND WITHDRAW_YN = 'Y'
							THEN 0
							ELSE ISNULL(AMOUNT, 0)
							 END AS amount
				  FROM LIONS_DEPOSIT
				 WHERE ORGAN_CODE = @organCode
				   AND (
							(START_DATE >= @startDate AND START_DATE <= @endDate)
						 OR (END_DATE >= @startDate AND END_DATE <= @endDate)
						 OR (START_DATE <= @startDate AND END_DATE >= @startDate) 
						 OR (START_DATE <= @endDate AND END_DATE >= @endDate)
					)
			) R
		);
		
		SET @prev = (
			SELECT ISNULL(MONTH_TOTAL, 0)
			  FROM LIONS_CALCULATE
			 WHERE CA_YM = @prevSessionYearMonth
			   AND ORGAN_CODE = @organCode
			   AND CONFIRM_YN = 'Y'
		);
		
		/* 회비미수금 */
		SET @dues = (
			SELECT (
					SELECT ISNULL(SUM(MI.IMPOST), 0) AS impost
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					 WHERE MM.GEN_DATE <= @endDate
					   AND MM.CLASS_ITEM_CODE = '1010'
					   AND MM.ORGAN_CODE = @organCode	
				) - 
				(
					SELECT ISNULL(SUM(MP.PAYMENT), 0) AS payment
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					 INNER JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					   AND MP.PAYMENT_DATE <= @endDate
					 WHERE MM.GEN_DATE <= @endDate
					   AND MM.CLASS_ITEM_CODE = '1010'
					   AND MM.ORGAN_CODE = @organCode
				)
		)
					
		/* 기타미수금 */
		SET @etc = (
			SELECT (
					SELECT ISNULL(SUM(MI.IMPOST), 0) AS impost
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					 WHERE MM.GEN_DATE <= @endDate
					   AND MM.CLASS_ITEM_CODE NOT IN('1010', '1030', '1040')	/* 회의비, 약정금, 지구임원분담금 제외 */
					   AND MM.ORGAN_CODE = @organCode	
				) - 
				(
					SELECT ISNULL(SUM(MP.PAYMENT), 0) AS payment
					  FROM LIONS_MONEY_MASTER MM
					 INNER JOIN LIONS_MONEY_IMPOST MI
						ON MM.IDN_NO = MI.IDN_NO
					 INNER JOIN LIONS_MONEY_PAYMENT MP
						ON MM.IDN_NO = MP.IDN_NO
					   AND MP.PAYMENT_DATE <= @endDate
					 WHERE MM.GEN_DATE <= @endDate
					   AND MM.CLASS_ITEM_CODE NOT IN('1010', '1030', '1040')	/* 회의비, 약정금, 지구임원분담금 제외 */
					   AND MM.ORGAN_CODE = @organCode
				)		
		)
		
		UPDATE LIONS_CALCULATE
		   SET  MONTH_TOTAL = (@prev + @income) - @expend	/* 잔액총계 */
			   ,MONTH_REMAIN = ((@prev + @income) - @expend) + @deposit	/* 잔액 */
			   ,DEPOSIT_TOTAL = @deposit	/* 정기예금 */
			   ,NOT_INCOME_1000_TOTAL = @dues	/* 회비미수금 */
			   ,NOT_INCOME_ETC_TOTAL = @etc	/* 기타미수금 */
			   ,CONFIRM_YN = 'Y'
			   ,CONFIRM_COUNT = CONFIRM_COUNT + 1
			   ,CONFIRM_DATE = CONVERT(CHAR(8), GETDATE(), 112)
			   ,UPDATE_DATE = GETDATE()
			   ,UPDATE_NAME = #updateName#
		 WHERE ORGAN_CODE = @organCode
		   AND CA_YM = @sessionYearMonth
 		]]>
 	</update>
 	
 	<select id="lionsclubs.com.SM1.SM1_4.SM1_15.objectPrevCalculate" resultClass="SM1_15VO">
 		<include refid="lionsclubs.com.SM1.SM1_4.SM1_15.declare" />
		SELECT  CONFIRM_YN AS confirmYn	/* 정산여부 */
			   ,CONFIRM_LOCK_YN AS confirmLockYn	/* 정산확정여부 */
		  FROM LIONS_CALCULATE
		 WHERE ORGAN_CODE = @organCode
		   AND CA_YM = @prevSessionYearMonth 
 	</select>

 	<select id="lionsclubs.com.SM1.SM1_4.SM1_15.objectNextCalculate" resultClass="SM1_15VO">
 		<include refid="lionsclubs.com.SM1.SM1_4.SM1_15.declare" />
		SELECT  CONFIRM_YN AS confirmYn	/* 정산여부 */
			   ,CONFIRM_LOCK_YN AS confirmLockYn	/* 정산확정여부 */
		  FROM LIONS_CALCULATE
		 WHERE ORGAN_CODE = @organCode
		   AND CA_YM = @nextSessionYearMonth 
 	</select>

 	<update id="lionsclubs.com.SM1.SM1_4.SM1_15.updateCalculateConfirmCancel">
 		<include refid="lionsclubs.com.SM1.SM1_4.SM1_15.declare" />
 		
 		UPDATE LIONS_CALCULATE
 		   SET  CONFIRM_YN = 'N'
 		   	   ,CONFIRM_DATE = NULL
			   ,UPDATE_DATE = GETDATE()
			   ,UPDATE_NAME = #updateName#
		 WHERE ORGAN_CODE = @organCode
		   AND CA_YM = @sessionYearMonth
 	</update>

 	<update id="lionsclubs.com.SM1.SM1_4.SM1_15.updateCalculateConfirmLock">
 		<include refid="lionsclubs.com.SM1.SM1_4.SM1_15.declare" />
 		
 		UPDATE LIONS_CALCULATE
 		   SET  CONFIRM_LOCK_YN = 'Y'
 		   	   ,CONFIRM_LOCK_DATE = CONVERT(CHAR(8), GETDATE(), 112)
			   ,UPDATE_DATE = GETDATE()
			   ,UPDATE_NAME = #updateName#
		 WHERE ORGAN_CODE = @organCode
		   AND CA_YM = @sessionYearMonth
 	</update>
 	
 	<update id="lionsclubs.com.SM1.SM1_4.SM1_15.updateCalculateConfirmLockCancel">
 		<include refid="lionsclubs.com.SM1.SM1_4.SM1_15.declare" />
 		
 		UPDATE LIONS_CALCULATE
		   SET  MONTH_TOTAL = NULL	/* 잔액총계 */
			   ,MONTH_REMAIN = NULL	/* 잔액 */
			   ,DEPOSIT_TOTAL = NULL	/* 정기예금 */
			   ,NOT_INCOME_1000_TOTAL = NULL	/* 회비미수금 */
			   ,NOT_INCOME_ETC_TOTAL = NULL	/* 기타미수금 */
 		   	   ,CONFIRM_LOCK_YN = 'N'
 		   	   ,CONFIRM_LOCK_DATE = NULL
			   ,UPDATE_DATE = GETDATE()
			   ,UPDATE_NAME = #updateName#
		 WHERE ORGAN_CODE = @organCode
		   AND CA_YM = @sessionYearMonth
 	</update>
</sqlMap>
