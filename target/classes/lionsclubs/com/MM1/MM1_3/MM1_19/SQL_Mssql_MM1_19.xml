<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM1.MM1_3.MM1_19">

	<typeAlias alias="MM1_19VO" type="lionsclubs.com.MM1.MM1_3.MM1_19.MM1_19VO"/>
	
	<select id="lionsclubs.com.MM1.MM1_3.MM1_19.MM1_19" resultClass="MM1_19VO">
		DECLARE @organCode NVARCHAR(6)
		DECLARE @sessionYear INT
		DECLARE @startDate NVARCHAR(8)
		DECLARE @endDate NVARCHAR(8)
		
		SET @organCode = #organCode#;
		SET @sessionYear = #sessionYear#;
		SET @startDate = CAST(@sessionYear - 1 AS NVARCHAR(4)) + '0701';	
		SET @endDate = CAST(@sessionYear AS NVARCHAR(4)) + '0630';
		
		WITH ORGAN_CODE AS(
			SELECT ORGAN_CODE
			  FROM(
				/* 신입회원 */
				SELECT SECTOR_CLUB_CODE AS ORGAN_CODE
				  FROM LIONS_NEW_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>
				UNION
				/* 퇴회회원 */
				SELECT ORGAN_CODE
				  FROM LIONS_RETIRE_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>
				UNION
				/* 전입회원 */
				SELECT ORGAN_CODE
				  FROM LIONS_MOVEIN_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>
				UNION
				/* 재입회회원 */
				SELECT ORGAN_CODE
				  FROM LIONS_REINDUCT_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>
			) OC
		), /* 신입회원 입력/승인/처리 */
		NEW_MEMBER AS(
			SELECT  SECTOR_CLUB_CODE
				   ,SUM(totalCnt) AS totalCnt
				   ,SUM(approveCnt) AS approveCnt
				   ,SUM(treatmentCnt) AS treatmentCnt
			  FROM(
				SELECT  SECTOR_CLUB_CODE
					   ,1 AS totalCnt
					   ,CASE WHEN APPROVE_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS approveCnt
					   ,CASE WHEN TREATMENT_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS treatmentCnt
				  FROM LIONS_NEW_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>  
			) NM
			 GROUP BY SECTOR_CLUB_CODE
		),/* 퇴회회원 입력/승인/처리 */
		RETIRE_MEMBER AS(
			SELECT  ORGAN_CODE
				   ,SUM(totalCnt) AS totalCnt
				   ,SUM(approveCnt) AS approveCnt
				   ,SUM(treatmentCnt) AS treatmentCnt
			  FROM(
				SELECT  ORGAN_CODE
					   ,1 AS totalCnt
					   ,CASE WHEN APPROVE_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS approveCnt
					   ,CASE WHEN TREATMENT_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS treatmentCnt
				  FROM LIONS_RETIRE_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>	  
			) NM
			 GROUP BY ORGAN_CODE
		),/* 전입회원 입력/승인/처리 */
		MOVEIN_MEMBER AS(
			SELECT  ORGAN_CODE
				   ,SUM(totalCnt) AS totalCnt
				   ,SUM(approveCnt) AS approveCnt
				   ,SUM(treatmentCnt) AS treatmentCnt
			  FROM(
				SELECT  ORGAN_CODE
					   ,1 AS totalCnt
					   ,CASE WHEN APPROVE_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS approveCnt
					   ,CASE WHEN TREATMENT_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS treatmentCnt
				  FROM LIONS_MOVEIN_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>	  
			) NM
			 GROUP BY ORGAN_CODE
		),/* 재입회회원 입력/승인/처리 */
		REINDUCT_MEMBER AS(
			SELECT  ORGAN_CODE
				   ,SUM(totalCnt) AS totalCnt
				   ,SUM(approveCnt) AS approveCnt
				   ,SUM(treatmentCnt) AS treatmentCnt
			  FROM(
				SELECT  ORGAN_CODE
					   ,1 AS totalCnt
					   ,CASE WHEN APPROVE_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS approveCnt
					   ,CASE WHEN TREATMENT_YN = 'Y'
							 THEN 1
							 ELSE 0 END AS treatmentCnt
				  FROM LIONS_REINDUCT_MEMBER
				<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="sessionYear">
					<![CDATA[
						    CONVERT(NVARCHAR(8), INSERT_DATE, 112) >= @startDate
						AND CONVERT(NVARCHAR(8), INSERT_DATE, 112) <= @endDate
					]]>
					</isNotEmpty>
				</dynamic>	  
			) NM
			 GROUP BY ORGAN_CODE
		)
		
		SELECT  ROW_NUMBER() OVER (
					<dynamic prepend="ORDER BY">
						<isEqual property="order" prepend="," compareValue="1">
							 ISNULL(IO_STATUS.newUnTreatmentCnt, 0) + ISNULL(IO_STATUS.retireUnTreatmentCnt, 0) + ISNULL(IO_STATUS.moveinUnTreatmentCnt, 0) + ISNULL(IO_STATUS.reinductUnTreatmentCnt, 0) DESC
							,IO_STATUS.organCode
						</isEqual>
						<isEqual property="order" prepend="," compareValue="2">
							 ISNULL(IO_STATUS.newApproveCnt, 0) + ISNULL(IO_STATUS.retireApproveCnt, 0) + ISNULL(IO_STATUS.moveinApproveCnt, 0) + ISNULL(IO_STATUS.reinductApproveCnt, 0) DESC
							,IO_STATUS.organCode
						</isEqual>
						<isEqual property="order" prepend="," compareValue="3">
							IO_STATUS.organCode
						</isEqual>
						<isEqual property="order" prepend="," compareValue="4">
							 IO_STATUS.organName
						</isEqual>
					</dynamic>
				) AS rnum
			   ,IO_STATUS.organCode	/* 클럽코드 */
			   ,IO_STATUS.organName	/* 클럽명 */
			   ,IO_STATUS.newTotalCnt	/* 신입회원 입력 */
			   ,IO_STATUS.newApproveCnt	/* 신입회원 승인 */
			   ,IO_STATUS.newTreatmentCnt	/* 신입회원 처리 */
			   ,IO_STATUS.newUnTreatmentCnt	/* 신입회원 미처리 */
			   ,IO_STATUS.retireTotalCnt	/* 퇴회회원 입력 */
			   ,IO_STATUS.retireApproveCnt	/* 퇴회회원 승인 */
			   ,IO_STATUS.retireTreatmentCnt	/* 퇴회회원 처리 */
			   ,IO_STATUS.retireUnTreatmentCnt	/* 퇴회회원 미처리 */
			   ,IO_STATUS.moveinTotalCnt	/* 전입회원 입력 */
			   ,IO_STATUS.moveinApproveCnt	/* 전입회원 승인 */
			   ,IO_STATUS.moveinTreatmentCnt	/* 전입회원 처리 */
			   ,IO_STATUS.moveinUnTreatmentCnt	/* 전입회원 미처리 */
			   ,IO_STATUS.reinductTotalCnt	/* 재입회회원 입력 */
			   ,IO_STATUS.reinductApproveCnt	/* 재입회회원 승인 */
			   ,IO_STATUS.reinductTreatmentCnt	/* 재입회회원 처리 */
			   ,IO_STATUS.reinductUnTreatmentCnt	/* 재입회회원 미처리 */	
			   ,ISNULL(IO_STATUS.newUnTreatmentCnt, 0) + ISNULL(IO_STATUS.retireUnTreatmentCnt, 0) + ISNULL(IO_STATUS.moveinUnTreatmentCnt, 0) + ISNULL(IO_STATUS.reinductUnTreatmentCnt, 0) AS totalUnTreatment	/* 전체 미처리 */
		  FROM(
			SELECT  OC.ORGAN_CODE AS organCode	/* 클럽코드 */
				   ,dbo.FN_LIONS_ORGAN_NAME(OC.ORGAN_CODE) AS organName	/* 클럽명 */
				   ,NM.totalCnt AS newTotalCnt	/* 신입회원 입력 */
				   ,NM.approveCnt AS newApproveCnt	/* 신입회원 승인 */
				   ,NM.treatmentCnt AS newTreatmentCnt	/* 신입회원 처리 */
				   ,NM.approveCnt - NM.treatmentCnt AS newUnTreatmentCnt	/* 신입회원 미처리 */
				   ,RM.totalCnt AS retireTotalCnt	/* 퇴회회원 입력 */
				   ,RM.approveCnt AS retireApproveCnt	/* 퇴회회원 승인 */
				   ,RM.treatmentCnt AS retireTreatmentCnt	/* 퇴회회원 처리 */
				   ,RM.approveCnt - RM.treatmentCnt AS retireUnTreatmentCnt	/* 퇴회회원 미처리 */
				   ,MM.totalCnt AS moveinTotalCnt	/* 전입회원 입력 */
				   ,MM.approveCnt AS moveinApproveCnt	/* 전입회원 승인 */
				   ,MM.treatmentCnt AS moveinTreatmentCnt	/* 전입회원 처리 */
				   ,MM.approveCnt - MM.treatmentCnt AS moveinUnTreatmentCnt	/* 전입회원 미처리 */
				   ,R.totalCnt AS reinductTotalCnt	/* 재입회회원 입력 */
				   ,R.approveCnt AS reinductApproveCnt	/* 재입회회원 승인 */
				   ,R.treatmentCnt AS reinductTreatmentCnt	/* 재입회회원 처리 */
				   ,R.approveCnt - R.treatmentCnt AS reinductUnTreatmentCnt	/* 재입회회원 미처리 */
			  FROM ORGAN_CODE OC
			 INNER JOIN dbo.FN_LIONS_AUTH_ORGAN_CODE_LIST(#authMemberNo#) AUTH
				ON AUTH.ORGAN_CODE = OC.ORGAN_CODE
			 INNER JOIN dbo.FN_LIONS_SUB_TREE_YEAR_ORGAN(@sessionYear, @organCode) STYO
			    ON OC.ORGAN_CODE = STYO.ORGAN_CODE
			  LEFT OUTER JOIN NEW_MEMBER NM
				ON OC.ORGAN_CODE = NM.SECTOR_CLUB_CODE
			  LEFT OUTER JOIN RETIRE_MEMBER RM
				ON OC.ORGAN_CODE = RM.ORGAN_CODE
			  LEFT OUTER JOIN MOVEIN_MEMBER MM
				ON OC.ORGAN_CODE = MM.ORGAN_CODE
			  LEFT OUTER JOIN REINDUCT_MEMBER R
				ON OC.ORGAN_CODE = R.ORGAN_CODE
		) IO_STATUS
	</select>
</sqlMap>
