<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM1.MM1_1.MM1_01">

	<typeAlias alias="MM1_01VO" type="lionsclubs.com.MM1.MM1_1.MM1_01.MM1_01VO"/>

	<sql id="lionsclubs.com.MM1.MM1_1.MM1_01.selectQuery">
		DECLARE @sessionYear NVARCHAR(4)	/* 현회선택 */
		DECLARE @memberNo NVARCHAR(8)	/* 회원번호 */
		
		SET @sessionYear = #sessionYear#;
		SET @memberNo = UPPER(#memberNo#);
		
		SELECT  INFO.MEMBER_NO AS memberNo
			   ,INFO.PASSWORD AS password
			   ,INFO.NAME AS name
			   ,INFO.CHIN_NAME AS chinName
			   ,INFO.ENG_NAME AS engName
			   ,INFO.SECTOR_CLUB AS sectorClub
			   ,INFO.DIVISION AS division
			   ,INFO.BIRTH AS birth
			   ,INFO.SING_DATE AS singDate
			   ,CASE WHEN ISDATE(INFO.SING_DATE) = 1
			   		 THEN CONVERT(NVARCHAR(4), (DATEDIFF(MM, INFO.SING_DATE, GETDATE()) / 12))
			   		 ELSE 0
			   		  END AS singYearTerm
			   ,CASE WHEN ISDATE(INFO.SING_DATE) = 1
			   		 THEN DATEDIFF(MM,DATEADD (MM , 12 * CONVERT(INTEGER, DATEDIFF(MM, INFO.SING_DATE, GETDATE()) / 12 ), INFO.SING_DATE), GETDATE())
			   		 ELSE 0
			   		  END AS singMonthTerm
			   ,INFO.SING_DIVISION_DATE AS singDivisionDate
			   ,INFO.SING_DIVISION AS singDivision
			   ,INFO.QUIT_DATE AS quitDate
			   ,INFO.QUIT_DIVISION AS quitDivision
			   ,INFO.EXPULSION_FLAG AS expulsionFlag	/* 제명구분 */
			   ,INFO.ADDRESS AS address
			   ,INFO.ZIP_CODE AS zipCode
			   ,INFO.MOBILE AS mobile
			   ,INFO.WORK_TEL AS workTel
			   ,INFO.CLUB_TITLE AS clubTitle
			   ,INFO.HOME_TEL AS homeTel
			   ,INFO.FAX AS fax
			   ,INFO.DIVISION_SECTOR AS divisionSector
			   ,INFO.MAIL_ADDRESS AS mailAddress
			   ,INFO.GMAIL AS gmail
			   ,INFO.DISTRICT_TITLE AS districtTitle
			   ,INFO.COMPLEX_TITLE AS complexTitle
			   ,INFO.ASSOCIATION_TITLE AS associationTitle
			   ,INFO.BUSINESS_CLASS AS businessClass
			   ,INFO.MARRY_STATUS AS marryStatus
			   ,INFO.GAMETE_NAME AS gameteName
			   ,INFO.INDUSTRY AS industry
			   ,dbo.FN_LIONS_DETAILCODE_NAME('1200', INFO.BUSINESS_CLASS, INFO.INDUSTRY) AS industryName	/* 업종명 */
			   ,INFO.FAMILY AS family
			   ,INFO.CHILDREN AS children
			   ,INFO.COMPANY_TITLE AS companyTitle
			   ,INFO.COMPANY_NAME AS companyName
			   ,INFO.COMPANY_ADDRESS AS companyAddress
			   ,INFO.END_EDUCATION AS endEducation
			   ,INFO.NATIVE_SCHOOL AS nativeSchool
			   ,INFO.MAJOR_SUBJECT AS majorSubject
			   ,INFO.ARMY AS army
			   ,INFO.BLOOD AS blood
			   ,INFO.HOBBY AS hobby
			   ,INFO.HEIGHT AS height
			   ,INFO.RECOMM_MEMBER_NO AS recommMemberNo
			   ,(SELECT NAME FROM LIONS_MEMBER_INFO WHERE MEMBER_NO = INFO.RECOMM_MEMBER_NO) AS recommMemberName
			   ,INFO.RECOMM_SECTOR_CLUB_NAME AS recommSectorClubName
			   ,INFO.RECOMM_REALTIONSHIP AS recommRealtionship
			   ,HISTORY.OFFICER_SOLID_CODE AS officerSolidCode	/* 책임자연대코드 */
			   ,HISTORY.ORGAN_OFFICER_MEMBER_MODEL_CODE AS organOfficerMemberModelCode	/* 책임자호칭 */
			   ,INFO.MEMBER_PICTURE_FILE AS memberPictureFile
			   ,INFO.NESS_PICTURE_FILE AS nessPictureFile
			   ,AZ.AREA AS area  /* 지역번호 */
			   ,AZ.ZONE AS zone   /* 지대번호 */
			   ,INFO.INSERT_DATE AS insertDate
			   ,INFO.INSERT_NAME AS insertName
			   ,INFO.UPDATE_DATE AS updateDate
			   ,INFO.UPDATE_NAME AS updateName
		  FROM LIONS_MEMBER_INFO_VIEW INFO
		  LEFT OUTER JOIN (
				SELECT TOP 1 * 
				  FROM(
					SELECT  ROW_NUMBER() OVER (PARTITION BY ORGAN_CODE ORDER BY CHANGE_DATE DESC, IDN_NO DESC) AS rnum
						   ,OFFICER_SOLID_CODE
						   ,ORGAN_OFFICER_MEMBER_NO
						   ,ORGAN_OFFICER_MEMBER_MODEL_CODE
					FROM LIONS_ORGAN_CODE_HISTORY
				   WHERE ORGAN_OFFICER_MEMBER_MODEL_CODE = '1120'	/* 총재코드 */
				     AND ORGAN_OFFICER_MEMBER_NO = @memberNo
				) HISTORY
				 WHERE HISTORY.rnum = 1
		  ) AS HISTORY
			ON INFO.MEMBER_NO = HISTORY.ORGAN_OFFICER_MEMBER_NO
		  LEFT OUTER JOIN dbo.LIONS_AREA_ZONE AZ
		    ON INFO.SECTOR_CLUB_CODE = AZ.ORGAN_CODE
		   AND AZ.SESSION_YEAR = @sessionYear
		 WHERE INFO.MEMBER_NO = @memberNo
	</sql>
	
	<select id="lionsclubs.com.MM1.MM1_1.MM1_01.MM1_01" resultClass="MM1_01VO">
		<include refid="lionsclubs.com.MM1.MM1_1.MM1_01.selectQuery"/>
	</select>

	<insert id="lionsclubs.com.MM1.MM1_1.MM1_01.profileInsert">
		INSERT INTO LIONS_MEMBER_INFO(
			 MEMBER_NO
			,PASSWORD
			,NAME
			,BIRTH
			,CHIN_NAME
			,ENG_NAME
			,DIVISION
			,MEMBER_PICTURE_FILE
			,NESS_PICTURE_FILE
			,INSERT_DATE
			,INSERT_NAME
			,UPDATE_DATE
			,UPDATE_NAME
		) VALUES (
			 UPPER(#memberNo#)	/* 회원번호 */
			,#password#	/* 패스워드 */
			,#name#	/* 성명 */
			,REPLACE(#birth#, '.', '')	/* 생년월일 */
			,#chinName#	/* 한자 */
			,#engName#	/* 영문 */
			,#division#	/* 구분 */
			,#memberPictureFile#	/* 회원사진파일주소 */
			,#nessPictureFile#	/* 네스사진파일주소 */
			,GETDATE()	/* 생성일자 */
			,#insertName#	/* 생성자 */
			,GETDATE()	/* 수정일자 */
			,#updateName#	/* 수정자 */
		)		
	</insert>
	
	<update id="lionsclubs.com.MM1.MM1_1.MM1_01.profileUpdate">
		UPDATE LIONS_MEMBER_INFO 
		   SET  NAME = #name#	/* 성명 */
			   ,BIRTH = REPLACE(#birth#, '.', '')	/* 생년월일 */
			   ,CHIN_NAME = #chinName#	/* 한자 */
			   ,ENG_NAME = #engName#	/* 영문 */
			   ,DIVISION = #division#	/* 구분 */
			   ,MEMBER_PICTURE_FILE = #memberPictureFile#	/* 회원사진파일주소 */
			   ,NESS_PICTURE_FILE = #nessPictureFile#	/* 네스사진파일주소 */
			   ,INSERT_DATE = GETDATE()	/* 생성일자 */
			   ,INSERT_NAME = #insertName#	/* 생성자 */
			   ,UPDATE_DATE = GETDATE()	/* 수정일자 */
			   ,UPDATE_NAME = #updateName#	/* 수정자 */
		WHERE MEMBER_NO = #memberNo#
	</update>
	
	<sql id="lionsclubs.com.MM1.MM1_1.MM1_01.duplicateQuery">
		SELECT  NAME AS name
			   ,MEMBER_PICTURE_FILE AS memberPictureFile
			   ,NESS_PICTURE_FILE AS nessPictureFile
			   ,SECTOR_CLUB AS sectorClub
		  FROM LIONS_MEMBER_INFO_VIEW
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="memberNo">
				MEMBER_NO = UPPER(#memberNo#)
			</isNotEmpty>
			<isNotEmpty prepend="OR" property="name">
				NAME = #name#
			</isNotEmpty>
			<isNotEmpty prepend="OR" property="birth">
				BIRTH = REPLACE(#birth#, '.', '')
			</isNotEmpty>
		</dynamic>
	</sql>
	
	<select id="lionsclubs.com.MM1.MM1_1.MM1_01.duplicate" resultClass="MM1_01VO">
		<include refid="lionsclubs.com.MM1.MM1_1.MM1_01.duplicateQuery"/>
	</select>
	
	<select id="lionsclubs.com.MM1.MM1_1.MM1_01.duplicateCheck" resultClass="Integer">
		SELECT COUNT(*) FROM(
			<include refid="lionsclubs.com.MM1.MM1_1.MM1_01.duplicateQuery"/>
		) COUNT
	</select>

	<select id="lionsclubs.com.MM1.MM1_1.MM1_01.duplicateCheck2" resultClass="Integer">
		SELECT COUNT(*)
		  FROM LIONS_MEMBER_INFO_VIEW
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="name">
				NAME = #name#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="birth">
				BIRTH = REPLACE(#birth#, '.', '')
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="lionsclubs.com.MM1.MM1_1.MM1_01.recommMemberList" resultClass="MM1_01VO">
		SELECT  MEMBER_NO AS memberNo
			   ,NAME AS name
			   ,SING_DATE AS singDate
			   ,SECTOR_CLUB AS sectorClub
			   ,dbo.FN_LIONS_CODE_NAME('2580', RECOMM_REALTIONSHIP) AS recommRealtionship
			   ,QUIT_DATE AS quitDate
		  FROM LIONS_MEMBER_INFO_VIEW
		 WHERE RECOMM_MEMBER_NO = UPPER(#memberNo#)
	</select>
	
	<update id="lionsclubs.com.MM1.MM1_1.MM1_01.hrUpdate">
			UPDATE LIONS_MEMBER_INFO 
			   SET  ADDRESS = #address#
				   ,ZIP_CODE = #zipCode#
				   ,MOBILE = #mobile#
				   ,WORK_TEL = #workTel#
				   ,HOME_TEL = #homeTel#
				   ,FAX = #fax#
				   ,MAIL_ADDRESS = #mailAddress#
				   ,GMAIL = #gmail#
				   ,BUSINESS_CLASS = #businessClass#
				   ,MARRY_STATUS = #marryStatus#
				   ,GAMETE_NAME = #gameteName#
				   ,INDUSTRY = #industry#
				   ,FAMILY = #family#
				   ,CHILDREN = #children#
				   ,COMPANY_NAME = #companyName#
				   ,COMPANY_TITLE = #companyTitle#
				   ,COMPANY_ADDRESS = #companyAddress#
				   ,END_EDUCATION = #endEducation#
				   ,NATIVE_SCHOOL = #nativeSchool#
				   ,MAJOR_SUBJECT = #majorSubject#
				   ,ARMY = #army#
				   ,BLOOD = #blood#
				   ,HOBBY = #hobby#
				   ,HEIGHT = #height#
				   ,RECOMM_MEMBER_NO = #recommMemberNo#
				   ,RECOMM_REALTIONSHIP = #recommRealtionship#
				   ,UPDATE_DATE = GETDATE()
				   ,UPDATE_NAME = #updateName#
			 WHERE MEMBER_NO = #memberNo# 	
	</update>
	
	<select id="lionsclubs.com.MM1.MM1_1.MM1_01.memberNo" resultClass="MM1_01VO">
		WITH PAGING_RNUM AS(
			SELECT PAGING.* FROM(
				SELECT  ROW_NUMBER() OVER (ORDER BY SECTOR_CLUB_CODE, MEMBER_NO) AS rnum
					   ,PAGING_WARP.MEMBER_NO
				FROM(
					SELECT  INFO.MEMBER_NO
						   ,AUTH.SECTOR_CLUB_CODE
					  FROM LIONS_MEMBER_INFO INFO
					 INNER JOIN dbo.FN_LIONS_AUTH_MEMBER_LIST(#authMemberNo#) AUTH
					    ON INFO.MEMBER_NO = AUTH.MEMBER_NO
				) PAGING_WARP
			) PAGING	
		),THIS_RNUM AS(
			SELECT rnum FROM PAGING_RNUM WHERE MEMBER_NO = UPPER(#memberNo#)
		),MEMBER_NO AS(
			SELECT	(SELECT MEMBER_NO FROM PAGING_RNUM WHERE rnum = TR.rnum - 1) AS PREV_MEMBER_NO
				   ,(SELECT MEMBER_NO FROM PAGING_RNUM WHERE rnum = TR.rnum + 1) AS NEXT_MEMBER_NO
			FROM THIS_RNUM TR
		)
		SELECT  PREV_MEMBER_NO AS prevMemberNo
			   ,NEXT_MEMBER_NO AS nextMemberNo
		  FROM MEMBER_NO
	</select>
</sqlMap>
