<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="lionsclubs.com.MM4.MM4_2.MM4_05">

	<typeAlias alias="MM4_05VO" type="lionsclubs.com.MM4.MM4_2.MM4_05.MM4_05VO"/>
	<typeAlias alias="MM4_05VO_PARAM" type="lionsclubs.com.MM4.MM4_2.MM4_05.MM4_05VO_PARAM"/>

	<sql id="lionsclubs.com.MM4.MM4_2.MM4_05.commonSql">
	<![CDATA[
		DECLARE @yearCode INT
		DECLARE @month NVARCHAR(2)
		DECLARE @toDate NVARCHAR(8)
		DECLARE @fromDate NVARCHAR(8)
		DECLARE @toYearLastDate NVARCHAR(8)
		DECLARE @preYearFirstDate NVARCHAR(8)
		DECLARE @preYearLastDate NVARCHAR(8)
		DECLARE @orgCode NVARCHAR(10)
		DECLARE @uYear NVARCHAR(4)
		
		SET @orgCode = #orgCode#;
		SET @yearCode = #yearCode#;
		SET @month = CASE WHEN #month# = '' THEN '06' ELSE #month# END;
		SET @uYear = CASE WHEN @month < '07' THEN CAST(@yearCode as NVARCHAR(4)) ELSE CAST(@yearCode - 1 as NVARCHAR(4)) END;
		SET @toDate = @uYear + @month + CONVERT(NVARCHAR(2), day(dateadd(month,1,@uYear + @month + '04')-(day(@uYear + @month + '04'))));
		SET @fromDate = CAST(@yearCode - 1 as NVARCHAR(4)) + '0701';
		SET @preYearFirstDate = CAST(@yearCode - 2 as NVARCHAR(4)) + '0701';
		SET @preYearLastDate  = CAST(@yearCode - 1 as NVARCHAR(4)) + '0630';
		SET @toYearLastDate  = CAST(@yearCode as NVARCHAR(4)) + '0630';
		
	WITH 	
			ORG_TREE_TO AS ( /* 전체 조직트리  기간동안의 연합,복합정보 조회용 */
				SELECT 
					A2.ORGAN_CODE as ORGAN_CODE
					, A2.UPPER_ORGAN_CODE as UPPER_ORGAN_CODE
					, A2.ORGAN_OFFICER_MEMBER_NO as ORGAN_OFFICER_MEMBER_NO
					, CAST(A2.TARGET_MEMBER as INT) as TARGET_MEMBER
					, D.ORGAN_ABOLISH_DATE as ORGAN_ABOLISH_DATE
					, D.SPOT_NIGHT as SPOT_NIGHT
				FROM dbo.LIONS_ORGAN_CODE_HISTORY A2 
				INNER JOIN dbo.LIONS_ORGAN_CODE D ON D.ORGAN_CODE = A2.ORGAN_CODE
				WHERE D.SPOT_NIGHT != '' 
				  AND (D.ORGAN_ABOLISH_DATE >= @fromDate OR D.ORGAN_ABOLISH_DATE = '')	
				  AND A2.IDN_NO IN (
						SELECT
						MAX(B.IDN_NO) OVER(PARTITION BY B.ORGAN_CODE) as IDN_NO
						FROM (
							SELECT
							ORGAN_CODE,
							MAX(CHANGE_DATE) CHANGE_DATE
							FROM dbo.LIONS_ORGAN_CODE_HISTORY
							WHERE CHANGE_DATE BETWEEN @fromDate AND @toDate
							GROUP BY ORGAN_CODE
						) A
						INNER JOIN dbo.LIONS_ORGAN_CODE_HISTORY B
						ON B.ORGAN_CODE = A.ORGAN_CODE AND B.CHANGE_DATE = A.CHANGE_DATE
					)
			),
			
			ORG_TREE_FROM AS ( /* 조직트리 - 회기 시작시점 */
				SELECT 
					A2.ORGAN_CODE as ORGAN_CODE
					, A2.UPPER_ORGAN_CODE as UPPER_ORGAN_CODE
					, A2.ORGAN_OFFICER_MEMBER_NO as ORGAN_OFFICER_MEMBER_NO
					, CAST(A2.TARGET_MEMBER as INT) as TARGET_MEMBER
					, D.ORGAN_ABOLISH_DATE as ORGAN_ABOLISH_DATE
					, D.SPOT_NIGHT as SPOT_NIGHT
				FROM dbo.LIONS_ORGAN_CODE_HISTORY A2
				INNER JOIN dbo.LIONS_ORGAN_CODE D ON D.ORGAN_CODE = A2.ORGAN_CODE		
				WHERE D.SPOT_NIGHT != '' 
				  AND (D.ORGAN_ABOLISH_DATE >= @fromDate OR D.ORGAN_ABOLISH_DATE = '')	
				  AND A2.IDN_NO IN (
					SELECT
					MAX(B.IDN_NO) OVER(PARTITION BY B.ORGAN_CODE) as IDN_NO
					FROM (
							SELECT
							ORGAN_CODE,
							MAX(CHANGE_DATE) CHANGE_DATE
							FROM dbo.LIONS_ORGAN_CODE_HISTORY
							WHERE CHANGE_DATE BETWEEN @preYearFirstDate AND @preYearLastDate
							GROUP BY ORGAN_CODE
						) A
						INNER JOIN dbo.LIONS_ORGAN_CODE_HISTORY B
						ON B.ORGAN_CODE = A.ORGAN_CODE AND B.CHANGE_DATE = A.CHANGE_DATE
					)
			),
			
			CLUB_CODE_TO AS ( /* 클럽코드  현재 */
				SELECT
					   A.ORGAN_CODE as LVL1_CODE
					  ,B.ORGAN_CODE as LVL2_CODE
					  ,C.ORGAN_CODE as LVL3_CODE
					  ,D.ORGAN_CODE as LVL4_CODE
					  ,D.ORGAN_ABOLISH_DATE as ORGAN_ABOLISH_DATE
					  ,D.SPOT_NIGHT as SPOT_NIGHT
					  ,D.TARGET_MEMBER as TARGET_MEMBER
				FROM ORG_TREE_TO A
				INNER JOIN ORG_TREE_TO B ON B.UPPER_ORGAN_CODE = A.ORGAN_CODE
				INNER JOIN ORG_TREE_TO C ON C.UPPER_ORGAN_CODE = B.ORGAN_CODE
				INNER JOIN ORG_TREE_TO D ON D.UPPER_ORGAN_CODE = C.ORGAN_CODE
				]]>
				<isEqual property="lvl" compareValue="1">
				<![CDATA[
						WHERE A.ORGAN_CODE = @orgCode
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="2">
				<![CDATA[
						WHERE B.ORGAN_CODE = @orgCode
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="3">
				<![CDATA[
						WHERE C.ORGAN_CODE = @orgCode
				]]>
				</isEqual>
				<![CDATA[
			),
			
			CLUB_CODE_FROM AS ( /* 클럽코드  취임 */
				SELECT
					   A.ORGAN_CODE as LVL1_CODE
					  ,B.ORGAN_CODE as LVL2_CODE
					  ,C.ORGAN_CODE as LVL3_CODE
					  ,D.ORGAN_CODE as LVL4_CODE
					  ,D.ORGAN_ABOLISH_DATE as ORGAN_ABOLISH_DATE
					  ,D.SPOT_NIGHT as SPOT_NIGHT
					  ,D.TARGET_MEMBER as TARGET_MEMBER
				FROM ORG_TREE_FROM A
				INNER JOIN ORG_TREE_FROM B ON B.UPPER_ORGAN_CODE = A.ORGAN_CODE
				INNER JOIN ORG_TREE_FROM C ON C.UPPER_ORGAN_CODE = B.ORGAN_CODE
				INNER JOIN ORG_TREE_FROM D ON D.UPPER_ORGAN_CODE = C.ORGAN_CODE
				]]>
				<isEqual property="lvl" compareValue="1">
				<![CDATA[
						WHERE A.ORGAN_CODE = @orgCode
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="2">
				<![CDATA[
						WHERE B.ORGAN_CODE = @orgCode
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="3">
				<![CDATA[
						WHERE C.ORGAN_CODE = @orgCode
				]]>
				</isEqual>
				<![CDATA[
			),
			
			CLUB_CODE_OUT AS (
				/* 폐지날짜가 있는 클럽 리스트 : 2014-11-24
				 폐지된 클럽 소속의 회원은 회원이 탈퇴처리가 안되어도 탈퇴 */
				select 
					 LVL1_CODE
					,LVL2_CODE
					,LVL3_CODE
					,LVL4_CODE
				from CLUB_CODE_TO
				where ORGAN_ABOLISH_DATE >= @fromDate AND ORGAN_ABOLISH_DATE < @toDate
			),
			
			CLUB_CNT_HIST AS (
				SELECT 		
				]]>	
				<isEqual property="lvl" compareValue="1">
				<![CDATA[
						 A.LVL2_CODE as BASE_ORG_CODE
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="2">
				<![CDATA[
						 A.LVL3_CODE as BASE_ORG_CODE
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="3">
				<![CDATA[
						 A.LVL4_CODE as BASE_ORG_CODE
				]]>
				</isEqual>
				<![CDATA[
				,SUM(A.FROM_CLUB_CNT) AS FROM_CLUB_CNT 
				,SUM(A.TO_CLUB_CNT) AS TO_CLUB_CNT
				,SUM(A.IN_CLUB_CNT) AS IN_CLUB_CNT
				,SUM(A.OUT_CLUB_CNT) AS OUT_CLUB_CNT
				,SUM(A.TM_CNT) AS TM_CNT
				FROM (
					SELECT
						 COALESCE(A.LVL2_CODE,B.LVL2_CODE) AS LVL2_CODE
						,COALESCE(A.LVL3_CODE,B.LVL3_CODE) AS LVL3_CODE
						,COALESCE(A.LVL4_CODE,B.LVL4_CODE) AS LVL4_CODE
						,CASE WHEN A.LVL4_CODE IS NULL OR (A.ORGAN_ABOLISH_DATE BETWEEN @preYearFirstDate AND @preYearLastDate) THEN 0
							ELSE 1 END AS FROM_CLUB_CNT
			  			,CASE WHEN B.LVL4_CODE IS NULL OR (B.ORGAN_ABOLISH_DATE >= @fromDate AND B.ORGAN_ABOLISH_DATE < @toDate) THEN 0
			  				ELSE 1 END AS TO_CLUB_CNT 
			  			,CASE WHEN B.SPOT_NIGHT BETWEEN @fromDate AND @toDate THEN 1 ELSE 0 END AS IN_CLUB_CNT
			  			,CASE WHEN (B.ORGAN_ABOLISH_DATE >= @fromDate AND B.ORGAN_ABOLISH_DATE < @toDate) THEN 1 ELSE 0 END AS OUT_CLUB_CNT
			  			,ISNULL(B.TARGET_MEMBER,0) AS TM_CNT
					FROM CLUB_CODE_FROM A
					FULL OUTER JOIN CLUB_CODE_TO B ON B.LVL4_CODE = A.LVL4_CODE
				) A		
				GROUP BY
				]]>		
				<isEqual property="lvl" compareValue="1">
				<![CDATA[
						 A.LVL2_CODE
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="2">
				<![CDATA[
						 A.LVL3_CODE
				]]>
				</isEqual>
				<isEqual property="lvl" compareValue="3">
				<![CDATA[
						 A.LVL4_CODE
				]]>
				</isEqual>
				<![CDATA[
			),
			
						
			
			MEMBER_CNT_TO AS ( /*회원수 현재(현재회기) */
				SELECT
					B.ORGAN_CODE as ORGAN_CODE,
					COUNT(DISTINCT B.MEMBER_NO) as MEMBER_CNT_TO
				FROM (
					SELECT
						H.MEMBER_NO				
						]]>		
						<isEqual property="lvl" compareValue="1">
						<![CDATA[
								 , C.LVL2_CODE as ORGAN_CODE
						]]>
						</isEqual>
						<isEqual property="lvl" compareValue="2">
						<![CDATA[
								 , C.LVL3_CODE as ORGAN_CODE
						]]>
						</isEqual>
						<isEqual property="lvl" compareValue="3">
						<![CDATA[
								 , C.LVL4_CODE as ORGAN_CODE			/* 클럽코드 */
						]]>
						</isEqual>
						<![CDATA[
					FROM dbo.LIONS_MEMBER_CLUB_HIST H
					INNER JOIN CLUB_CODE_TO C ON C.LVL4_CODE = H.ORGAN_CODE
					/* 클럽만 퇴회 처리되고 회원이 퇴회처리안된 회원은 카운트안되도록 처리 : 2014-11-24 */
					LEFT OUTER JOIN CLUB_CODE_OUT O ON O.LVL4_CODE = C.LVL4_CODE 
					WHERE H.[START_DATE] <= @toDate AND H.END_DATE > @toDate
					AND O.LVL4_CODE is null
				) B 
				GROUP BY B.ORGAN_CODE			
			),
			
			MEMBER_CNT_FROM AS ( /* 회원수 취임 (이전회기 회원수) */
				SELECT			
					B.ORGAN_CODE as ORGAN_CODE,			
					COUNT(DISTINCT B.MEMBER_NO) as MEMBER_CNT_FROM
				FROM (
						SELECT
							H.MEMBER_NO
							]]>		
							<isEqual property="lvl" compareValue="1">
							<![CDATA[
									 ,C.LVL2_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="2">
							<![CDATA[
									 ,C.LVL3_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="3">
							<![CDATA[
									 ,C.LVL4_CODE as ORGAN_CODE			/* 클럽코드 */
							]]>
							</isEqual>
							<![CDATA[			
							
						FROM dbo.LIONS_MEMBER_CLUB_HIST H 	
						INNER JOIN CLUB_CODE_FROM C ON C.LVL4_CODE = H.ORGAN_CODE	
						WHERE H.[START_DATE] <= @preYearLastDate AND H.END_DATE > @preYearLastDate
						
				) B  		
				GROUP BY B.ORGAN_CODE
			),
			
			MEMBER_CNT_NEW AS ( /* 회원수 입회(현재회기) */
				SELECT			
					B.ORGAN_CODE as ORGAN_CODE,			
					COUNT(B.MEMBER_NO) as MEMBER_CNT_NEW
				FROM (
						SELECT
							H.MEMBER_NO
							]]>		
							<isEqual property="lvl" compareValue="1">
							<![CDATA[
									 ,C.LVL2_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="2">
							<![CDATA[
									 ,C.LVL3_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="3">
							<![CDATA[
									 ,C.LVL4_CODE as ORGAN_CODE			/* 클럽코드 */
							]]>
							</isEqual>
							<![CDATA[			
							
						FROM dbo.LIONS_APPOINTMENT H
						INNER JOIN CLUB_CODE_TO C ON C.LVL4_CODE = H.ORGAN_CODE	
						WHERE H.APP_KIND_CODE = '1040' AND H.APP_DESC_CODE IN ('1000','1020','1030')
						AND H.[START_DATE] BETWEEN @fromDate AND @toDate				
											
				) B  		
				GROUP BY B.ORGAN_CODE	
				
			),
			
			MEMBER_CNT_OUT AS ( /* 회원수 퇴회(현재회기) */
				SELECT			
					B.ORGAN_CODE as ORGAN_CODE,			
					COUNT(B.MEMBER_NO) as MEMBER_CNT_OUT
				FROM (
						SELECT
							H.MEMBER_NO
							]]>		
							<isEqual property="lvl" compareValue="1">
							<![CDATA[
									 ,C.LVL2_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="2">
							<![CDATA[
									 ,C.LVL3_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="3">
							<![CDATA[
									 ,C.LVL4_CODE as ORGAN_CODE			/* 클럽코드 */
							]]>
							</isEqual>
							<![CDATA[			
							
						FROM dbo.LIONS_APPOINTMENT H
						INNER JOIN CLUB_CODE_TO C ON C.LVL4_CODE = H.ORGAN_CODE	
						WHERE H.APP_KIND_CODE = '1050'
						AND H.[START_DATE] BETWEEN @fromDate AND @toDate
						
						union all
				
						/* 클럽만 폐지 처리되고 회원에게는 퇴회 처리가 안된 부분 따로 카운트함. */
						SELECT	
							H.MEMBER_NO
							]]>		
							<isEqual property="lvl" compareValue="1">
							<![CDATA[
									 ,C.LVL2_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="2">
							<![CDATA[
									 ,C.LVL3_CODE as ORGAN_CODE
							]]>
							</isEqual>
							<isEqual property="lvl" compareValue="3">
							<![CDATA[
									 ,C.LVL4_CODE as ORGAN_CODE			/* 클럽코드 */
							]]>
							</isEqual>
							<![CDATA[	
						FROM dbo.LIONS_MEMBER_CLUB_HIST H
						INNER JOIN CLUB_CODE_OUT C ON C.LVL4_CODE = H.ORGAN_CODE
						WHERE H.[START_DATE] <= @toDate AND H.END_DATE > @toDate	
				) B  		
				GROUP BY B.ORGAN_CODE		
			),
			
			RESULT_DATA AS (
				SELECT
					 ISNULL(A.BASE_ORG_CODE,0) as BASE_ORG_CODE
					,ISNULL(A.FROM_CLUB_CNT,0) as FROM_CLUB_CNT
					,ISNULL(A.IN_CLUB_CNT,0) as IN_CLUB_CNT
					,ISNULL(A.OUT_CLUB_CNT,0) as OUT_CLUB_CNT
					,ISNULL(A.IN_CLUB_CNT,0) -  ISNULL(A.OUT_CLUB_CNT,0) as CAL_CLUB_CNT
					,ISNULL(A.TO_CLUB_CNT,0) as TO_CLUB_CNT
					,ISNULL(A.TM_CNT, 0) as TM_CNT 
					,ISNULL(B.MEMBER_CNT_FROM,0) as MEMBER_CNT_FROM
					,ISNULL(C.MEMBER_CNT_NEW,0) as MEMBER_CNT_NEW
					,ISNULL(D.MEMBER_CNT_OUT,0) as MEMBER_CNT_OUT
					,ISNULL(C.MEMBER_CNT_NEW,0) -  ISNULL(D.MEMBER_CNT_OUT,0) as CAL_MEMBER_CNT
					,ISNULL(E.MEMBER_CNT_TO	,0) as MEMBER_CNT_TO
				FROM CLUB_CNT_HIST A
				LEFT OUTER JOIN MEMBER_CNT_FROM B ON B.ORGAN_CODE = A.BASE_ORG_CODE
				LEFT OUTER JOIN MEMBER_CNT_NEW C ON	C.ORGAN_CODE = A.BASE_ORG_CODE	
				LEFT OUTER JOIN MEMBER_CNT_OUT D ON D.ORGAN_CODE = A.BASE_ORG_CODE	
				LEFT OUTER JOIN MEMBER_CNT_TO E	ON E.ORGAN_CODE = A.BASE_ORG_CODE
			),
			
			PRESIDENT_LIST AS (
				SELECT
					 case when A.organT IS null then A.organF
						else A.organT end ORGAN_CODE
					, case when A.officerT IS null then A.officerF
						else A.officerT end ORGAN_OFFICER_MEMBER_NO
					, case when A.organT IS null then 'N'
						else 'Y' end ORGAN_YN
				FROM (
					select 				
						T.ORGAN_CODE as organT
						, T.ORGAN_OFFICER_MEMBER_NO as officerT
						, F.ORGAN_CODE as organF
						, F.ORGAN_OFFICER_MEMBER_NO as officerF				
					from ORG_TREE_TO as T
					full outer join ORG_TREE_FROM as F on F.ORGAN_CODE=T.ORGAN_CODE
				) A	
			)
	]]>
	</sql>
	
 	<select id="lionsclubs.com.MM4.MM4_2.MM4_05.selectList" resultClass="MM4_05VO" parameterClass="MM4_05VO_PARAM">
		<include refid="lionsclubs.com.MM4.MM4_2.MM4_05.commonSql" />
		<![CDATA[
SELECT
	 A.BASE_ORG_CODE				as orgCode
	,(SELECT ISNULL(KO_ABBR,'Not Club') FROM dbo.LIONS_ORGAN_CODE WHERE ORGAN_CODE=A.BASE_ORG_CODE) as orgName
	,ISNULL(M.NAME,'') 				as presidentName
	,A.BASE_ORG_CODE			 	as baseOrgCode
	,A.FROM_CLUB_CNT			 	as fromClubCnt
	,A.IN_CLUB_CNT					as inClubCnt
	,A.OUT_CLUB_CNT					as outClubCnt
	,A.CAL_CLUB_CNT					as calClubCnt
	,A.TO_CLUB_CNT					as toClubCnt
	,A.TM_CNT						as tmCnt
	,A.MEMBER_CNT_FROM				as memberCntFrom
	,A.MEMBER_CNT_NEW				as memberCntNew
	,A.MEMBER_CNT_OUT				as memberCntOut
	,A.CAL_MEMBER_CNT				as calMemberCnt
	,A.MEMBER_CNT_TO				as memberCntTo
FROM RESULT_DATA A
INNER JOIN PRESIDENT_LIST C ON C.ORGAN_CODE = A.BASE_ORG_CODE
LEFT OUTER JOIN dbo.LIONS_MEMBER_INFO M ON M.MEMBER_NO = C.ORGAN_OFFICER_MEMBER_NO 
]]>
<isEqual property="lvl" compareValue="3">
<![CDATA[
		LEFT OUTER JOIN CLUB_CODE_OUT O ON O.LVL4_CODE = A.BASE_ORG_CODE
		WHERE O.LVL4_CODE is null
]]>
</isEqual>
<![CDATA[
order by A.BASE_ORG_CODE
		]]>
 	</select>
</sqlMap>
